// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.webmethodsapigateway4j.operations;

import java.util.Objects;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;
import org.jspecify.annotations.NonNull;
import org.jspecify.annotations.Nullable;

/**
 * GetApplicableAPISForGlobalPolicyById
 * <p>
 * This REST request is used to get the list of applicable APIs for a global policy.  An API become  applicable API for a global policy only if it satisfies the scope specified in the global policy.  By default it will return the basic API details of all the applicable APIs either if the API is active or inactive for a global policy. User can use the query parameter "active" to retrieve all active APIs for a global policy or all applicable APIs regardless of its status for a global policy.
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@Generated(value = "io.github.primelib.primecodegen")
public class GetApplicableAPISForGlobalPolicyByIdOperationSpec {
    /**
     * allows to disable validation of the spec, use with care!
     */
    @ApiStatus.Experimental
    public static Boolean VALIDATION_ENABLED = true;

    /**
     * This path parameter is used to specify the global policy id for which we need the list of applicable APIs
     *
     */
    @NonNull
    private String policyId;

    /**
     * This is a query parameter. It is used to retrieve the list of applicable APIs for a global policy. If the value for this parameter is 'false' then it will return all the APIs whether it is active or not for the specified global policy. If the value for this flag is 'true' then it will return only the list of applicable active APIs alone for the specified global policy
     *
     */
    @Nullable
    private String active;

    /**
     * Constructs a validated instance of {@link GetApplicableAPISForGlobalPolicyByIdOperationSpec}.
     *
     * @param spec the specification to process
     */
    @ApiStatus.Internal
    public GetApplicableAPISForGlobalPolicyByIdOperationSpec(Consumer<GetApplicableAPISForGlobalPolicyByIdOperationSpec> spec) {
        spec.accept(this);
        if (VALIDATION_ENABLED)
            validate();
    }

    /**
     * Validates the Spec, will throw a exception if required parameters are missing
     *
     * @throws NullPointerException
     */
    public void validate() {
        Objects.requireNonNull(policyId, "policyId is a required parameter!");
    }
}
