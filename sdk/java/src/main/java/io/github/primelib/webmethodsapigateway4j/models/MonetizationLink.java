// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.webmethodsapigateway4j.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.Map;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.AccessLevel;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;

/**
 * MonetizationLink
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@NoArgsConstructor(access = AccessLevel.PROTECTED, force = true)
@JsonTypeName("MonetizationLink")
@JsonPropertyOrder({
    "description",
    "getref",
    "operationId",
    "operationRef",
    "parameters",
    "requestBody",
    "vendorExtensions"
})
@Generated(value = "io.github.primelib.primecodegen")
public class MonetizationLink {

    /**
     * A description of the link
     */
    @JsonProperty("description")
    protected String description;

    @JsonProperty("get$ref")
    protected String getref;

    /**
     * The name of an existing, resolvable OAS operation, as defined with a unique operationId. This field is mutually exclusive of the operationRef field
     */
    @JsonProperty("operationId")
    protected String operationId;

    /**
     * A relative or absolute reference to an OAS operation. This field is mutually exclusive of the operationId field, and MUST point to an Operation Object. Relative operationRef values MAY be used to locate an existing Operation Object in the API definition
     */
    @JsonProperty("operationRef")
    protected String operationRef;

    @JsonProperty("parameters")
    protected Map<String, String> parameters;

    /**
     * A literal value or {expression} to use as a request body when calling the target operation
     */
    @JsonProperty("requestBody")
    protected String requestBody;

    @JsonProperty("vendorExtensions")
    protected Map<String, Object> vendorExtensions;

    /**
     * Constructs a validated instance of {@link MonetizationLink}.
     *
     * @param spec the specification to process
     */
    public MonetizationLink(Consumer<MonetizationLink> spec) {
        super();
        spec.accept(this);
    }

    /**
     * Constructs a validated instance of {@link MonetizationLink}.
     * <p>
     * NOTE: This constructor is not considered stable and may change if the model is updated. Consider using {@link #MonetizationLink(Consumer)} instead.
     * @param description A description of the link
     * @param getref getref
     * @param operationId The name of an existing, resolvable OAS operation, as defined with a unique operationId. This field is mutually exclusive of the operationRef field
     * @param operationRef A relative or absolute reference to an OAS operation. This field is mutually exclusive of the operationId field, and MUST point to an Operation Object. Relative operationRef values MAY be used to locate an existing Operation Object in the API definition
     * @param parameters parameters
     * @param requestBody A literal value or {expression} to use as a request body when calling the target operation
     * @param vendorExtensions vendorExtensions
     */
    @ApiStatus.Internal
    public MonetizationLink(String description, String getref, String operationId, String operationRef, Map<String, String> parameters, String requestBody, Map<String, Object> vendorExtensions) {
        this.description = description;
        this.getref = getref;
        this.operationId = operationId;
        this.operationRef = operationRef;
        this.parameters = parameters;
        this.requestBody = requestBody;
        this.vendorExtensions = vendorExtensions;
    }
}
