// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.webmethodsapigateway4j.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.AccessLevel;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;

/**
 * PolicyMgmtPolicyEnforcementStage
 * <p>
 * Each Policy Stage contains one or more policies. It provide you a the list of policy enforcement associated with each stage and its sequence either in, out or fault.
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@NoArgsConstructor(access = AccessLevel.PROTECTED, force = true)
@JsonTypeName("PolicyMgmtPolicyEnforcementStage")
@JsonPropertyOrder({
    "descriptions",
    "names",
    "policyActionTempaltes",
    "sequence",
    "stageKey"
})
@Generated(value = "io.github.primelib.primecodegen")
public class PolicyMgmtPolicyEnforcementStage {

    /**
     * Stage description with corresponding locale
     */
    @JsonProperty("descriptions")
    protected List<PolicyMgmtInternationalizedString> descriptions;

    /**
     * Stage name with corresponding locale
     */
    @JsonProperty("names")
    protected List<PolicyMgmtInternationalizedString> names;

    /**
     * The list of policy enforcements can be applied on the respective stage.
     */
    @JsonProperty("policyActionTempaltes")
    protected List<String> policyActionTempaltes;

    /**
     * Sequence of the stage.
 1. insequence - Stages or policies marked with this sequence will be executed when the request comes to API Gateway and before the request dispatched to native service. 
 2. outsequence - Stages or policies marked with this sequence will be executed when the request goes out of API Gateway to the invoker. 
 3. faultsequence - Stages or policies marked with this sequence will be executed when native service return any error.
     */
    @JsonProperty("sequence")
    protected String sequence;

    /**
     * The unique key for the stage.
     */
    @JsonProperty("stageKey")
    protected String stageKey;

    /**
     * Constructs a validated instance of {@link PolicyMgmtPolicyEnforcementStage}.
     *
     * @param spec the specification to process
     */
    public PolicyMgmtPolicyEnforcementStage(Consumer<PolicyMgmtPolicyEnforcementStage> spec) {
        super();
        spec.accept(this);
    }

    /**
     * Constructs a validated instance of {@link PolicyMgmtPolicyEnforcementStage}.
     * <p>
     * NOTE: This constructor is not considered stable and may change if the model is updated. Consider using {@link #PolicyMgmtPolicyEnforcementStage(Consumer)} instead.
     * @param descriptions Stage description with corresponding locale
     * @param names Stage name with corresponding locale
     * @param policyActionTempaltes The list of policy enforcements can be applied on the respective stage.
     * @param sequence Sequence of the stage.
 1. insequence - Stages or policies marked with this sequence will be executed when the request comes to API Gateway and before the request dispatched to native service. 
 2. outsequence - Stages or policies marked with this sequence will be executed when the request goes out of API Gateway to the invoker. 
 3. faultsequence - Stages or policies marked with this sequence will be executed when native service return any error.
     * @param stageKey The unique key for the stage.
     */
    @ApiStatus.Internal
    public PolicyMgmtPolicyEnforcementStage(List<PolicyMgmtInternationalizedString> descriptions, List<PolicyMgmtInternationalizedString> names, List<String> policyActionTempaltes, String sequence, String stageKey) {
        this.descriptions = descriptions;
        this.names = names;
        this.policyActionTempaltes = policyActionTempaltes;
        this.sequence = sequence;
        this.stageKey = stageKey;
    }
}
