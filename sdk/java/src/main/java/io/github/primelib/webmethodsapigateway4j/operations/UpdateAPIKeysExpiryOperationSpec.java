// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.webmethodsapigateway4j.operations;

import io.github.primelib.webmethodsapigateway4j.models.ApplicationAccessTokensTypeModel;
import java.util.Objects;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;
import org.jspecify.annotations.NonNull;

/**
 * UpdateAPIKeysExpiry
 * <p>
 * The method updates the expiry date of all the API Keys in the instance. The new expiry date is calculated based on the extended settings property 'apiKeyExpirationPeriod'. If 'apiKeyExpirationPeriod is empty, then the expiration date for all API Keys are set as unlimited.If 'apiKeyExpirationPeriod' is set to some accepted value (say 60min), then the expiry date is calculated as current time when this method is invoked + the expiration period (60min).Since this method updates expiry date for all API keys in the instance, take caution when you invoke this! Invoke this only if absolutely necessary and take necessary precautions!For example, your system might have applications to the scale of 1M or higher - make sure to configure appropriate timeout settings, etc when invoking this!
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@Generated(value = "io.github.primelib.primecodegen")
public class UpdateAPIKeysExpiryOperationSpec {
    /**
     * allows to disable validation of the spec, use with care!
     */
    @ApiStatus.Experimental
    public static Boolean VALIDATION_ENABLED = true;

    /**
     * This parameter specifies the type of access token for which expiry date should be updated. Currently only apiAccessKeyCredentials is supported
     *
     */
    @NonNull
    private ApplicationAccessTokensTypeModel payload;

    /**
     * Constructs a validated instance of {@link UpdateAPIKeysExpiryOperationSpec}.
     *
     * @param spec the specification to process
     */
    @ApiStatus.Internal
    public UpdateAPIKeysExpiryOperationSpec(Consumer<UpdateAPIKeysExpiryOperationSpec> spec) {
        spec.accept(this);
        if (VALIDATION_ENABLED)
            validate();
    }

    /**
     * Validates the Spec, will throw a exception if required parameters are missing
     *
     * @throws NullPointerException
     */
    public void validate() {
        Objects.requireNonNull(payload, "payload is a required parameter!");
    }
}
