// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.webmethodsapigateway4j.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.AccessLevel;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;

/**
 * PolicyMgmtScopeCondition
 * <p>
 * For each scope we can define set of scope condition. A scope condition will have set of attributes that needs to be satisfied by the APIs or Resource or Operation for applying the policy on that API or Resource or Operation. The logical operator between the attributes is always AND.
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@NoArgsConstructor(access = AccessLevel.PROTECTED, force = true)
@JsonTypeName("PolicyMgmtScopeCondition")
@JsonPropertyOrder({
    "attributes",
    "filterType",
    "logicalConnector"
})
@Generated(value = "io.github.primelib.primecodegen")
public class PolicyMgmtScopeCondition {

    @JsonProperty("attributes")
    protected List<PolicyMgmtAttribute> attributes;

    /**
     * This property is used to define the type of filter we will be using to define attributes. The allowed values are apis, httpMethod, tags. If API type is specified we can specify the fields of API such as apiName, apiDescription, apiVersion. If httpMethod specified we can specify the httpMethods(GET/POST/PUT/DELETE/POST) of the resource to filter the resource. This filter type is used for REST APIs only. If tag type is specified we can specify the field tags in API to filter api using tags. This is also only applicable for REST APIs.
     */
    @JsonProperty("filterType")
    protected String filterType;

    @JsonProperty("logicalConnector")
    protected String logicalConnector;

    /**
     * Constructs a validated instance of {@link PolicyMgmtScopeCondition}.
     *
     * @param spec the specification to process
     */
    public PolicyMgmtScopeCondition(Consumer<PolicyMgmtScopeCondition> spec) {
        super();
        spec.accept(this);
    }

    /**
     * Constructs a validated instance of {@link PolicyMgmtScopeCondition}.
     * <p>
     * NOTE: This constructor is not considered stable and may change if the model is updated. Consider using {@link #PolicyMgmtScopeCondition(Consumer)} instead.
     * @param attributes attributes
     * @param filterType This property is used to define the type of filter we will be using to define attributes. The allowed values are apis, httpMethod, tags. If API type is specified we can specify the fields of API such as apiName, apiDescription, apiVersion. If httpMethod specified we can specify the httpMethods(GET/POST/PUT/DELETE/POST) of the resource to filter the resource. This filter type is used for REST APIs only. If tag type is specified we can specify the field tags in API to filter api using tags. This is also only applicable for REST APIs.
     * @param logicalConnector logicalConnector
     */
    @ApiStatus.Internal
    public PolicyMgmtScopeCondition(List<PolicyMgmtAttribute> attributes, String filterType, String logicalConnector) {
        this.attributes = attributes;
        this.filterType = filterType;
        this.logicalConnector = logicalConnector;
    }
}
