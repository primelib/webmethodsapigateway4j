// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.webmethodsapigateway4j.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.AccessLevel;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;

/**
 * PolicyMgmtPolicyActionOrder
 * <p>
 * PolicyActionOrder is used to specify the policy enforcement order in its respective stage
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@NoArgsConstructor(access = AccessLevel.PROTECTED, force = true)
@JsonTypeName("PolicyMgmtPolicyActionOrder")
@JsonPropertyOrder({
    "isCustomOrderSupported",
    "orderPosition",
    "policyTemplateIds",
    "sequence"
})
@Generated(value = "io.github.primelib.primecodegen")
public class PolicyMgmtPolicyActionOrder {

    @JsonProperty("isCustomOrderSupported")
    protected Boolean isCustomOrderSupported;

    /**
     * Order of the policy enforcement. 
 1. First - policy enforcement needs to be added in its respective stage. 
 2. Last - policy enforcement needs to be added as last in its respective stage. 
 3. Before First occurrence - Policy needs to be added before the first occurrence of policyTemplateIds specified. 
 4. After last occurrence - Policy needs to be added after last occurrence of policyTemplateIds specified
     */
    @JsonProperty("orderPosition")
    protected String orderPosition;

    /**
     * List of policy template ids needed to process the order before first occurrence and after last occurrence
     */
    @JsonProperty("policyTemplateIDs")
    protected List<String> policyTemplateIds;

    /**
     * Sequence of the policy enforcement.
 1. insequence - Stages or policies marked with this sequence will be executed when the request comes to API Gateway and before the request dispatched to native service. 
 2. outsequence - Stages or policies marked with this sequence will be executed when the request goes out of API Gateway to the invoker. 
 3. faultsequence - Stages or policies marked with this sequence will be executed when native service return any error
     */
    @JsonProperty("sequence")
    protected List<String> sequence;

    /**
     * Constructs a validated instance of {@link PolicyMgmtPolicyActionOrder}.
     *
     * @param spec the specification to process
     */
    public PolicyMgmtPolicyActionOrder(Consumer<PolicyMgmtPolicyActionOrder> spec) {
        super();
        spec.accept(this);
    }

    /**
     * Constructs a validated instance of {@link PolicyMgmtPolicyActionOrder}.
     * <p>
     * NOTE: This constructor is not considered stable and may change if the model is updated. Consider using {@link #PolicyMgmtPolicyActionOrder(Consumer)} instead.
     * @param isCustomOrderSupported isCustomOrderSupported
     * @param orderPosition Order of the policy enforcement. 
 1. First - policy enforcement needs to be added in its respective stage. 
 2. Last - policy enforcement needs to be added as last in its respective stage. 
 3. Before First occurrence - Policy needs to be added before the first occurrence of policyTemplateIds specified. 
 4. After last occurrence - Policy needs to be added after last occurrence of policyTemplateIds specified
     * @param policyTemplateIds List of policy template ids needed to process the order before first occurrence and after last occurrence
     * @param sequence Sequence of the policy enforcement.
 1. insequence - Stages or policies marked with this sequence will be executed when the request comes to API Gateway and before the request dispatched to native service. 
 2. outsequence - Stages or policies marked with this sequence will be executed when the request goes out of API Gateway to the invoker. 
 3. faultsequence - Stages or policies marked with this sequence will be executed when native service return any error
     */
    @ApiStatus.Internal
    public PolicyMgmtPolicyActionOrder(Boolean isCustomOrderSupported, String orderPosition, List<String> policyTemplateIds, List<String> sequence) {
        this.isCustomOrderSupported = isCustomOrderSupported;
        this.orderPosition = orderPosition;
        this.policyTemplateIds = policyTemplateIds;
        this.sequence = sequence;
    }
}
