// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.webmethodsapigateway4j.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.AccessLevel;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;

/**
 * ApprovalMgmtApprovalConfiguration
 * <p>
 * This model contains details about an ApprovalConfiguration in API Gateway
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@NoArgsConstructor(access = AccessLevel.PROTECTED, force = true)
@JsonTypeName("ApprovalMgmtApprovalConfiguration")
@JsonPropertyOrder({
    "approvalMode",
    "approvedEmailConfiguration",
    "approversGroupId",
    "autoApproval",
    "eventType",
    "id",
    "initiateApprovalRequestEmailConfiguration",
    "isEnabled",
    "owningTeamApprovalRequired",
    "rejectedEmailConfiguration"
})
@Generated(value = "io.github.primelib.primecodegen")
public class ApprovalMgmtApprovalConfiguration {

    /**
     * Only possible value is anyone. This implies that, any one user associated with the approvers team can approve or reject the requests. The requester need not wait for the approval of each approver in the approvers group.
     */
    @JsonProperty("approvalMode")
    protected String approvalMode;

    /**
     * This model contains details about an EmailConfiguration configured in Approvals of API Gateway
     */
    @JsonProperty("approvedEmailConfiguration")
    protected ApprovalMgmtEmailConfiguration approvedEmailConfiguration;

    /**
     * Approvers Accessprofile Identifier. Whoever belongs to the selected team will be considered as Approvers
     */
    @JsonProperty("approversGroupId")
    protected String approversGroupId;

    /**
     * The created request will be auto-approved when the requester is a valid approver and the value is true. Default value is true.
     */
    @JsonProperty("autoApproval")
    protected Boolean autoApproval;

    /**
     * Event Type: Any of 'createApplication', 'updateApplication', 'registerApplication', 'subscribePackage' and 'changeOwner'
     */
    @JsonProperty("eventType")
    protected String eventType;

    /**
     * Unique identifier of a Approval Configuration. Any of 'createApplication', 'updateApplication', 'registerApplication', 'subscribePackage' and 'changeOwner'
     */
    @JsonProperty("id")
    protected String id;

    /**
     * This model contains details about an EmailConfiguration configured in Approvals of API Gateway
     */
    @JsonProperty("initiateApprovalRequestEmailConfiguration")
    protected ApprovalMgmtEmailConfiguration initiateApprovalRequestEmailConfiguration;

    /**
     * true/false. true value enforces approvals for the mentioned eventtype
     */
    @JsonProperty("isEnabled")
    protected Boolean isEnabled;

    /**
     * The asset specific team approvers will be the approvers when the value is true. Default value is false.
     */
    @JsonProperty("owningTeamApprovalRequired")
    protected Boolean owningTeamApprovalRequired;

    /**
     * This model contains details about an EmailConfiguration configured in Approvals of API Gateway
     */
    @JsonProperty("rejectedEmailConfiguration")
    protected ApprovalMgmtEmailConfiguration rejectedEmailConfiguration;

    /**
     * Constructs a validated instance of {@link ApprovalMgmtApprovalConfiguration}.
     *
     * @param spec the specification to process
     */
    public ApprovalMgmtApprovalConfiguration(Consumer<ApprovalMgmtApprovalConfiguration> spec) {
        super();
        spec.accept(this);
    }

    /**
     * Constructs a validated instance of {@link ApprovalMgmtApprovalConfiguration}.
     * <p>
     * NOTE: This constructor is not considered stable and may change if the model is updated. Consider using {@link #ApprovalMgmtApprovalConfiguration(Consumer)} instead.
     * @param approvalMode Only possible value is anyone. This implies that, any one user associated with the approvers team can approve or reject the requests. The requester need not wait for the approval of each approver in the approvers group.
     * @param approvedEmailConfiguration This model contains details about an EmailConfiguration configured in Approvals of API Gateway
     * @param approversGroupId Approvers Accessprofile Identifier. Whoever belongs to the selected team will be considered as Approvers
     * @param autoApproval The created request will be auto-approved when the requester is a valid approver and the value is true. Default value is true.
     * @param eventType Event Type: Any of 'createApplication', 'updateApplication', 'registerApplication', 'subscribePackage' and 'changeOwner'
     * @param id Unique identifier of a Approval Configuration. Any of 'createApplication', 'updateApplication', 'registerApplication', 'subscribePackage' and 'changeOwner'
     * @param initiateApprovalRequestEmailConfiguration This model contains details about an EmailConfiguration configured in Approvals of API Gateway
     * @param isEnabled true/false. true value enforces approvals for the mentioned eventtype
     * @param owningTeamApprovalRequired The asset specific team approvers will be the approvers when the value is true. Default value is false.
     * @param rejectedEmailConfiguration This model contains details about an EmailConfiguration configured in Approvals of API Gateway
     */
    @ApiStatus.Internal
    public ApprovalMgmtApprovalConfiguration(String approvalMode, ApprovalMgmtEmailConfiguration approvedEmailConfiguration, String approversGroupId, Boolean autoApproval, String eventType, String id, ApprovalMgmtEmailConfiguration initiateApprovalRequestEmailConfiguration, Boolean isEnabled, Boolean owningTeamApprovalRequired, ApprovalMgmtEmailConfiguration rejectedEmailConfiguration) {
        this.approvalMode = approvalMode;
        this.approvedEmailConfiguration = approvedEmailConfiguration;
        this.approversGroupId = approversGroupId;
        this.autoApproval = autoApproval;
        this.eventType = eventType;
        this.id = id;
        this.initiateApprovalRequestEmailConfiguration = initiateApprovalRequestEmailConfiguration;
        this.isEnabled = isEnabled;
        this.owningTeamApprovalRequired = owningTeamApprovalRequired;
        this.rejectedEmailConfiguration = rejectedEmailConfiguration;
    }
}
