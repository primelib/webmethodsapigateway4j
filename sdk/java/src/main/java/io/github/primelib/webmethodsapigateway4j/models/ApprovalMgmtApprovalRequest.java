// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.webmethodsapigateway4j.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.AccessLevel;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;

/**
 * ApprovalMgmtApprovalRequest
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@NoArgsConstructor(access = AccessLevel.PROTECTED, force = true)
@JsonTypeName("ApprovalMgmtApprovalRequest")
@JsonPropertyOrder({
    "approvalEvent",
    "approvers",
    "approversGroupId",
    "created",
    "id",
    "mode",
    "requesterComment",
    "requestorFirstName",
    "requestorId",
    "requestorLastName",
    "requestorMail",
    "requestorName",
    "status"
})
@Generated(value = "io.github.primelib.primecodegen")
public class ApprovalMgmtApprovalRequest {

    /**
     * Type of the approval event
     */
    @JsonProperty("approvalEvent")
    protected String approvalEvent;

    @JsonProperty("approvers")
    protected List<ApprovalMgmtApprover> approvers;

    /**
     * Approvers Accessprofile Identifier. Whoever belongs to the selected team will be considered as Approvers
     */
    @JsonProperty("approversGroupId")
    protected String approversGroupId;

    /**
     * Approval last updated time
     */
    @JsonProperty("created")
    protected String created;

    @JsonProperty("id")
    protected String id;

    /**
     * Mode of the request approval and 'anyone' is the only allowed value
     */
    @JsonProperty("mode")
    protected String mode;

    /**
     * Comment added by the requestor
     */
    @JsonProperty("requesterComment")
    protected String requesterComment;

    /**
     * First name of the requestor user name
     */
    @JsonProperty("requestorFirstName")
    protected String requestorFirstName;

    /**
     * User name of the requestor
     */
    @JsonProperty("requestorId")
    protected String requestorId;

    /**
     * Last name of the requestor user name
     */
    @JsonProperty("requestorLastName")
    protected String requestorLastName;

    /**
     * Mail id of the requestor
     */
    @JsonProperty("requestorMail")
    protected String requestorMail;

    /**
     * User name of the requestor
     */
    @JsonProperty("requestorName")
    protected String requestorName;

    /**
     * Publish Status of the API for this service registry. Possible values are NEW, PUBLISHED and SUSPENDED. NEW represents the API is not published to the service registry. PUBLISHED represents the API is published to the service registry. SUSPENDED represents the API is published to service registry, but is not currently active (during deactivation of API or shutdown of API Gateway).
     */
    @JsonProperty("status")
    protected String status;

    /**
     * Constructs a validated instance of {@link ApprovalMgmtApprovalRequest}.
     *
     * @param spec the specification to process
     */
    public ApprovalMgmtApprovalRequest(Consumer<ApprovalMgmtApprovalRequest> spec) {
        super();
        spec.accept(this);
    }

    /**
     * Constructs a validated instance of {@link ApprovalMgmtApprovalRequest}.
     * <p>
     * NOTE: This constructor is not considered stable and may change if the model is updated. Consider using {@link #ApprovalMgmtApprovalRequest(Consumer)} instead.
     * @param approvalEvent Type of the approval event
     * @param approvers approvers
     * @param approversGroupId Approvers Accessprofile Identifier. Whoever belongs to the selected team will be considered as Approvers
     * @param created Approval last updated time
     * @param id id
     * @param mode Mode of the request approval and 'anyone' is the only allowed value
     * @param requesterComment Comment added by the requestor
     * @param requestorFirstName First name of the requestor user name
     * @param requestorId User name of the requestor
     * @param requestorLastName Last name of the requestor user name
     * @param requestorMail Mail id of the requestor
     * @param requestorName User name of the requestor
     * @param status Publish Status of the API for this service registry. Possible values are NEW, PUBLISHED and SUSPENDED. NEW represents the API is not published to the service registry. PUBLISHED represents the API is published to the service registry. SUSPENDED represents the API is published to service registry, but is not currently active (during deactivation of API or shutdown of API Gateway).
     */
    @ApiStatus.Internal
    public ApprovalMgmtApprovalRequest(String approvalEvent, List<ApprovalMgmtApprover> approvers, String approversGroupId, String created, String id, String mode, String requesterComment, String requestorFirstName, String requestorId, String requestorLastName, String requestorMail, String requestorName, String status) {
        this.approvalEvent = approvalEvent;
        this.approvers = approvers;
        this.approversGroupId = approversGroupId;
        this.created = created;
        this.id = id;
        this.mode = mode;
        this.requesterComment = requesterComment;
        this.requestorFirstName = requestorFirstName;
        this.requestorId = requestorId;
        this.requestorLastName = requestorLastName;
        this.requestorMail = requestorMail;
        this.requestorName = requestorName;
        this.status = status;
    }
}
