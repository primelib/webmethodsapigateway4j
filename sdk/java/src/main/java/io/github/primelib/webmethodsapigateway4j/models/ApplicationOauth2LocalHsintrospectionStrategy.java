// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.webmethodsapigateway4j.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.AccessLevel;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;

/**
 * ApplicationOauth2LocalHsintrospectionStrategy
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@NoArgsConstructor(access = AccessLevel.PROTECTED, force = true)
@JsonTypeName("ApplicationOauth2LocalHsintrospectionStrategy")
@JsonPropertyOrder({
    "audience",
    "authServerAlias",
    "clientId",
    "clientRegistration",
    "dcrConfig",
    "description",
    "id",
    "jwtAuthStrategy",
    "name",
    "primaryNode",
    "secret",
    "type"
})
@Generated(value = "io.github.primelib.primecodegen")
public class ApplicationOauth2LocalHsintrospectionStrategy {

    @JsonProperty("audience")
    protected String audience;

    /**
     * The name of the authorization server alias
     */
    @JsonProperty("authServerAlias")
    protected String authServerAlias;

    @JsonProperty("clientId")
    protected String clientId;

    /**
     * Shows the configurations set for the oauth client, when using Dynamic Client Registration. This is a read only model. To update the configuration use the DynamicClientRegistrationConfig model.
     */
    @JsonProperty("clientRegistration")
    protected ApplicationClientRegistration clientRegistration;

    /**
     * Accepts the configurations to be set for the oauth client, when using Dynamic Client Registration
     */
    @JsonProperty("dcrConfig")
    protected ApplicationDynamicClientRegistrationConfig dcrConfig;

    @JsonProperty("description")
    protected String description;

    /**
     * A unique ID for the strategy
     */
    @JsonProperty("id")
    protected String id;

    @JsonProperty("jwtAuthStrategy")
    protected ApplicationJwtauthStrategy jwtAuthStrategy;

    /**
     * The name of the strategy
     */
    @JsonProperty("name")
    protected String name;

    @JsonProperty("primaryNode")
    protected ApplicationNode primaryNode;

    @JsonProperty("secret")
    protected ApplicationGatewaySecret secret;

    /**
     * Input file type
     */
    @JsonProperty("type")
    protected String type;

    /**
     * Constructs a validated instance of {@link ApplicationOauth2LocalHsintrospectionStrategy}.
     *
     * @param spec the specification to process
     */
    public ApplicationOauth2LocalHsintrospectionStrategy(Consumer<ApplicationOauth2LocalHsintrospectionStrategy> spec) {
        super();
        spec.accept(this);
    }

    /**
     * Constructs a validated instance of {@link ApplicationOauth2LocalHsintrospectionStrategy}.
     * <p>
     * NOTE: This constructor is not considered stable and may change if the model is updated. Consider using {@link #ApplicationOauth2LocalHsintrospectionStrategy(Consumer)} instead.
     * @param audience audience
     * @param authServerAlias The name of the authorization server alias
     * @param clientId clientId
     * @param clientRegistration Shows the configurations set for the oauth client, when using Dynamic Client Registration. This is a read only model. To update the configuration use the DynamicClientRegistrationConfig model.
     * @param dcrConfig Accepts the configurations to be set for the oauth client, when using Dynamic Client Registration
     * @param description description
     * @param id A unique ID for the strategy
     * @param jwtAuthStrategy jwtAuthStrategy
     * @param name The name of the strategy
     * @param primaryNode primaryNode
     * @param secret secret
     * @param type Input file type
     */
    @ApiStatus.Internal
    public ApplicationOauth2LocalHsintrospectionStrategy(String audience, String authServerAlias, String clientId, ApplicationClientRegistration clientRegistration, ApplicationDynamicClientRegistrationConfig dcrConfig, String description, String id, ApplicationJwtauthStrategy jwtAuthStrategy, String name, ApplicationNode primaryNode, ApplicationGatewaySecret secret, String type) {
        this.audience = audience;
        this.authServerAlias = authServerAlias;
        this.clientId = clientId;
        this.clientRegistration = clientRegistration;
        this.dcrConfig = dcrConfig;
        this.description = description;
        this.id = id;
        this.jwtAuthStrategy = jwtAuthStrategy;
        this.name = name;
        this.primaryNode = primaryNode;
        this.secret = secret;
        this.type = type;
    }
}
