// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.webmethodsapigateway4j.operations;

import io.github.primelib.webmethodsapigateway4j.models.ApplicationApplication;
import java.util.Objects;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;
import org.jspecify.annotations.NonNull;

/**
 * UpdateApplication
 * <p>
 * This HTTP request updates a specified application in API Gateway. You can use this resource to update basic information in application like name, description, version, identifiers, linked authentication strategy ids etc., but you cannot use this method to update the contents of authentication strategies, access tokens or to update associated apis. To regenerate the access tokens (API key), refer the resource /applications/{applicationId}/accessTokens POST. To update the associated apis, refer the resource /applications/{applicationId}/apis PUT. To create new authentication strategies or update the authentication strategies, refer the resource /strategies POST or /strategies/{strategyId} PUT
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@Generated(value = "io.github.primelib.primecodegen")
public class UpdateApplicationOperationSpec {
    /**
     * allows to disable validation of the spec, use with care!
     */
    @ApiStatus.Experimental
    public static Boolean VALIDATION_ENABLED = true;

    /**
     * This parameter specifies the ID of an application that is to be updated in API Gateway.
     *
     */
    @NonNull
    private String applicationId;

    /**
     * This parameter describes the request payload of an application that is to be updated in API Gateway.
     *
     */
    @NonNull
    private ApplicationApplication payload;

    /**
     * Constructs a validated instance of {@link UpdateApplicationOperationSpec}.
     *
     * @param spec the specification to process
     */
    @ApiStatus.Internal
    public UpdateApplicationOperationSpec(Consumer<UpdateApplicationOperationSpec> spec) {
        spec.accept(this);
        if (VALIDATION_ENABLED)
            validate();
    }

    /**
     * Validates the Spec, will throw a exception if required parameters are missing
     *
     * @throws NullPointerException
     */
    public void validate() {
        Objects.requireNonNull(applicationId, "applicationId is a required parameter!");
        Objects.requireNonNull(payload, "payload is a required parameter!");
    }
}
