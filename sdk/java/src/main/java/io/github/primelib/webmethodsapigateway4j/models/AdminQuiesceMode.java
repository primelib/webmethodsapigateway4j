// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.webmethodsapigateway4j.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.AccessLevel;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;

/**
 * AdminQuiesceMode
 * <p>
 * This contains quiesce mode settings for APIGateway.
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@NoArgsConstructor(access = AccessLevel.PROTECTED, force = true)
@JsonTypeName("AdminQuiesceMode")
@JsonPropertyOrder({
    "block",
    "enable",
    "failureReason",
    "flush",
    "status"
})
@Generated(value = "io.github.primelib.primecodegen")
public class AdminQuiesceMode {

    /**
     * Specifies the type of blocking for quiesce mode in API Gateway
     */
    @JsonProperty("block")
    protected String block;

    /**
     * Specifies whether to enable or disable quiesce mode for API Gateway
     */
    @JsonProperty("enable")
    protected Boolean enable;

    /**
     * Specifies the failure reason of the last quiesce mode operation if the status is a failure
     */
    @JsonProperty("failureReason")
    protected String failureReason;

    /**
     * Specifies the types of data that need to be flushed when quiesce mode for all is enabled in API Gateway
     */
    @JsonProperty("flush")
    protected List<String> flush;

    /**
     * Publish Status of the API for this service registry. Possible values are NEW, PUBLISHED and SUSPENDED. NEW represents the API is not published to the service registry. PUBLISHED represents the API is published to the service registry. SUSPENDED represents the API is published to service registry, but is not currently active (during deactivation of API or shutdown of API Gateway).
     */
    @JsonProperty("status")
    protected String status;

    /**
     * Constructs a validated instance of {@link AdminQuiesceMode}.
     *
     * @param spec the specification to process
     */
    public AdminQuiesceMode(Consumer<AdminQuiesceMode> spec) {
        super();
        spec.accept(this);
    }

    /**
     * Constructs a validated instance of {@link AdminQuiesceMode}.
     * <p>
     * NOTE: This constructor is not considered stable and may change if the model is updated. Consider using {@link #AdminQuiesceMode(Consumer)} instead.
     * @param block Specifies the type of blocking for quiesce mode in API Gateway
     * @param enable Specifies whether to enable or disable quiesce mode for API Gateway
     * @param failureReason Specifies the failure reason of the last quiesce mode operation if the status is a failure
     * @param flush Specifies the types of data that need to be flushed when quiesce mode for all is enabled in API Gateway
     * @param status Publish Status of the API for this service registry. Possible values are NEW, PUBLISHED and SUSPENDED. NEW represents the API is not published to the service registry. PUBLISHED represents the API is published to the service registry. SUSPENDED represents the API is published to service registry, but is not currently active (during deactivation of API or shutdown of API Gateway).
     */
    @ApiStatus.Internal
    public AdminQuiesceMode(String block, Boolean enable, String failureReason, List<String> flush, String status) {
        this.block = block;
        this.enable = enable;
        this.failureReason = failureReason;
        this.flush = flush;
        this.status = status;
    }
}
