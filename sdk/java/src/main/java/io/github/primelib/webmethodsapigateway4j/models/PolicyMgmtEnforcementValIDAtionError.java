// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.webmethodsapigateway4j.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.AccessLevel;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;

/**
 * PolicyMgmtEnforcementValIDAtionError
 * <p>
 * This model is used to represent the type of policy enforcement validation error
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@NoArgsConstructor(access = AccessLevel.PROTECTED, force = true)
@JsonTypeName("PolicyMgmtEnforcementValIDAtionError")
@JsonPropertyOrder({
    "allowedOccurrence",
    "conflictingTemplateId",
    "errorType",
    "missingDependency",
    "policyActionName",
    "templateId"
})
@Generated(value = "io.github.primelib.primecodegen")
public class PolicyMgmtEnforcementValIDAtionError {

    /**
     * This value will be populated when the error occurred due to occurrence of policy enforcement
     */
    @JsonProperty("allowedOccurrence")
    protected String allowedOccurrence;

    /**
     * This value will be populated when the error occurred due to mutually exclusive policy enforcement are available at the runtime enforcement of an API
     */
    @JsonProperty("conflictingTemplateId")
    protected String conflictingTemplateId;

    /**
     * The type of the policy enforcement validation error
     */
    @JsonProperty("errorType")
    protected String errorType;

    /**
     * The value of the list of missed policy enforcement which are dependent for this policy enforcement. This will be populated when the policy enforcement validation error occurred due to dependency missing
     */
    @JsonProperty("missingDependency")
    protected List<String> missingDependency;

    /**
     * The name of the policy enforcement which is having the validation error
     */
    @JsonProperty("policyActionName")
    protected String policyActionName;

    /**
     * The template Id of the policy enforcement which is having the validation error
     */
    @JsonProperty("templateId")
    protected String templateId;

    /**
     * Constructs a validated instance of {@link PolicyMgmtEnforcementValIDAtionError}.
     *
     * @param spec the specification to process
     */
    public PolicyMgmtEnforcementValIDAtionError(Consumer<PolicyMgmtEnforcementValIDAtionError> spec) {
        super();
        spec.accept(this);
    }

    /**
     * Constructs a validated instance of {@link PolicyMgmtEnforcementValIDAtionError}.
     * <p>
     * NOTE: This constructor is not considered stable and may change if the model is updated. Consider using {@link #PolicyMgmtEnforcementValIDAtionError(Consumer)} instead.
     * @param allowedOccurrence This value will be populated when the error occurred due to occurrence of policy enforcement
     * @param conflictingTemplateId This value will be populated when the error occurred due to mutually exclusive policy enforcement are available at the runtime enforcement of an API
     * @param errorType The type of the policy enforcement validation error
     * @param missingDependency The value of the list of missed policy enforcement which are dependent for this policy enforcement. This will be populated when the policy enforcement validation error occurred due to dependency missing
     * @param policyActionName The name of the policy enforcement which is having the validation error
     * @param templateId The template Id of the policy enforcement which is having the validation error
     */
    @ApiStatus.Internal
    public PolicyMgmtEnforcementValIDAtionError(String allowedOccurrence, String conflictingTemplateId, String errorType, List<String> missingDependency, String policyActionName, String templateId) {
        this.allowedOccurrence = allowedOccurrence;
        this.conflictingTemplateId = conflictingTemplateId;
        this.errorType = errorType;
        this.missingDependency = missingDependency;
        this.policyActionName = policyActionName;
        this.templateId = templateId;
    }
}
