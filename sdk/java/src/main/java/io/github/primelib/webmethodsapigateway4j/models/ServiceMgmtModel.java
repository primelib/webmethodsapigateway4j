// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.webmethodsapigateway4j.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.Map;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.AccessLevel;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;

/**
 * ServiceMgmtModel
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@NoArgsConstructor(access = AccessLevel.PROTECTED, force = true)
@JsonTypeName("ServiceMgmtModel")
@JsonPropertyOrder({
    "description",
    "example",
    "externalDocs",
    "properties",
    "reference",
    "title",
    "type",
    "vendorExtensions"
})
@Generated(value = "io.github.primelib.primecodegen")
public class ServiceMgmtModel {

    @JsonProperty("description")
    protected String description;

    /**
     * A free-form property to include an example of an instance for this schema. To represent examples that cannot be naturally represented in JSON or YAML, a string value can be used to contain the example with escaping where necessary
     */
    @JsonProperty("example")
    protected Object example;

    @JsonProperty("externalDocs")
    protected ServiceMgmtExternalDocs externalDocs;

    /**
     * The properties (key-value pairs) on an object are defined using the properties keyword. The value of properties is an object, where each key is the name of a property and each value is of type schema used to validate that property
     */
    @JsonProperty("properties")
    protected Map<String, ServiceMgmtSchema> properties;

    @JsonProperty("reference")
    protected String reference;

    @JsonProperty("title")
    protected String title;

    @JsonProperty("type")
    protected String type;

    @JsonProperty("vendorExtensions")
    protected Map<String, Object> vendorExtensions;

    /**
     * Constructs a validated instance of {@link ServiceMgmtModel}.
     *
     * @param spec the specification to process
     */
    public ServiceMgmtModel(Consumer<ServiceMgmtModel> spec) {
        super();
        spec.accept(this);
    }

    /**
     * Constructs a validated instance of {@link ServiceMgmtModel}.
     * <p>
     * NOTE: This constructor is not considered stable and may change if the model is updated. Consider using {@link #ServiceMgmtModel(Consumer)} instead.
     * @param description description
     * @param example A free-form property to include an example of an instance for this schema. To represent examples that cannot be naturally represented in JSON or YAML, a string value can be used to contain the example with escaping where necessary
     * @param externalDocs externalDocs
     * @param properties The properties (key-value pairs) on an object are defined using the properties keyword. The value of properties is an object, where each key is the name of a property and each value is of type schema used to validate that property
     * @param reference reference
     * @param title title
     * @param type type
     * @param vendorExtensions vendorExtensions
     */
    @ApiStatus.Internal
    public ServiceMgmtModel(String description, Object example, ServiceMgmtExternalDocs externalDocs, Map<String, ServiceMgmtSchema> properties, String reference, String title, String type, Map<String, Object> vendorExtensions) {
        this.description = description;
        this.example = example;
        this.externalDocs = externalDocs;
        this.properties = properties;
        this.reference = reference;
        this.title = title;
        this.type = type;
        this.vendorExtensions = vendorExtensions;
    }
}
