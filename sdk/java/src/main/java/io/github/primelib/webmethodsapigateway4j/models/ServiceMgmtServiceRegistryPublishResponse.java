// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.webmethodsapigateway4j.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.AccessLevel;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;

/**
 * ServiceMgmtServiceRegistryPublishResponse
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@NoArgsConstructor(access = AccessLevel.PROTECTED, force = true)
@JsonTypeName("ServiceMgmtServiceRegistryPublishResponse")
@JsonPropertyOrder({
    "description",
    "failureReason",
    "gatewayEndpoints",
    "serviceRegistryId",
    "serviceRegistryName",
    "status",
    "success"
})
@Generated(value = "io.github.primelib.primecodegen")
public class ServiceMgmtServiceRegistryPublishResponse {

    /**
     * Represents the status of the publish operation of the API to the service registry eg: Publish successful, Publish failed, etc
     */
    @JsonProperty("description")
    protected String description;

    /**
     * Provides the reason for the failure when the publish operation is not successful
     */
    @JsonProperty("failureReason")
    protected String failureReason;

    /**
     * List of API endpoints of the API. Each element contains an endpoint and the information about the publish status of that endpoint for the current service registry.
     */
    @JsonProperty("gatewayEndpoints")
    protected List<ServiceMgmtEndpoints> gatewayEndpoints;

    /**
     * Id i.e, UDDI key of the service registry
     */
    @JsonProperty("serviceRegistryId")
    protected String serviceRegistryId;

    /**
     * Name of the service registry
     */
    @JsonProperty("serviceRegistryName")
    protected String serviceRegistryName;

    /**
     * Publish Status of the API for this service registry. Possible values are NEW, PUBLISHED and SUSPENDED. NEW represents the API is not published to the service registry. PUBLISHED represents the API is published to the service registry. SUSPENDED represents the API is published to service registry, but is not currently active (during deactivation of API or shutdown of API Gateway).
     */
    @JsonProperty("status")
    protected String status;

    /**
     * Represents whether the publish of API to the service registry is success. Possible values: true/false
     */
    @JsonProperty("success")
    protected Boolean success;

    /**
     * Constructs a validated instance of {@link ServiceMgmtServiceRegistryPublishResponse}.
     *
     * @param spec the specification to process
     */
    public ServiceMgmtServiceRegistryPublishResponse(Consumer<ServiceMgmtServiceRegistryPublishResponse> spec) {
        super();
        spec.accept(this);
    }

    /**
     * Constructs a validated instance of {@link ServiceMgmtServiceRegistryPublishResponse}.
     * <p>
     * NOTE: This constructor is not considered stable and may change if the model is updated. Consider using {@link #ServiceMgmtServiceRegistryPublishResponse(Consumer)} instead.
     * @param description Represents the status of the publish operation of the API to the service registry eg: Publish successful, Publish failed, etc
     * @param failureReason Provides the reason for the failure when the publish operation is not successful
     * @param gatewayEndpoints List of API endpoints of the API. Each element contains an endpoint and the information about the publish status of that endpoint for the current service registry.
     * @param serviceRegistryId Id i.e, UDDI key of the service registry
     * @param serviceRegistryName Name of the service registry
     * @param status Publish Status of the API for this service registry. Possible values are NEW, PUBLISHED and SUSPENDED. NEW represents the API is not published to the service registry. PUBLISHED represents the API is published to the service registry. SUSPENDED represents the API is published to service registry, but is not currently active (during deactivation of API or shutdown of API Gateway).
     * @param success Represents whether the publish of API to the service registry is success. Possible values: true/false
     */
    @ApiStatus.Internal
    public ServiceMgmtServiceRegistryPublishResponse(String description, String failureReason, List<ServiceMgmtEndpoints> gatewayEndpoints, String serviceRegistryId, String serviceRegistryName, String status, Boolean success) {
        this.description = description;
        this.failureReason = failureReason;
        this.gatewayEndpoints = gatewayEndpoints;
        this.serviceRegistryId = serviceRegistryId;
        this.serviceRegistryName = serviceRegistryName;
        this.status = status;
        this.success = success;
    }
}
