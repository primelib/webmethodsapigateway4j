// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.webmethodsapigateway4j.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;
import java.util.Map;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.AccessLevel;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;

/**
 * MonetizationPackageResponse
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@NoArgsConstructor(access = AccessLevel.PROTECTED, force = true)
@JsonTypeName("MonetizationPackageResponse")
@JsonPropertyOrder({
    "active",
    "apis",
    "creationDate",
    "customFields",
    "description",
    "icon",
    "id",
    "modifiedDate",
    "name",
    "plans",
    "policyIds",
    "publishedPortals",
    "tags",
    "teams",
    "version"
})
@Generated(value = "io.github.primelib.primecodegen")
public class MonetizationPackageResponse {

    @JsonProperty("active")
    protected Boolean active;

    /**
     * List of api ids needs to be associated to package. It can be either provided during the package creation or separately using package update call
     */
    @JsonProperty("apis")
    protected List<MonetizationApi> apis;

    /**
     * The creation date of package in milli seconds
     */
    @JsonProperty("creationDate")
    protected Long creationDate;

    /**
     * Custom fields to be added.
     */
    @JsonProperty("customFields")
    protected Map<String, String> customFields;

    /**
     * Description of the package
     */
    @JsonProperty("description")
    protected String description;

    /**
     * An inline base64 encoded string representation of icon to be used in package
     */
    @JsonProperty("icon")
    protected String icon;

    /**
     * Id of the package. It will be autogenerated for the package on creation
     */
    @JsonProperty("id")
    protected String id;

    /**
     * The modified date of package in milli seconds. This will be updated for package on update, hot edit, activate and deactivate.
     */
    @JsonProperty("modifiedDate")
    protected Long modifiedDate;

    /**
     * Name of the package
     */
    @JsonProperty("name")
    protected String name;

    /**
     * List of plan ids needs to be associated to the package. It can be either provided during the package creation or separately using package update call
     */
    @JsonProperty("plans")
    protected List<MonetizationPlan> plans;

    /**
     * Policy id that contains the IAM policy to use for APIs associated to package. It will be created automatically.
     */
    @JsonProperty("policyIds")
    protected List<String> policyIds;

    /**
     * List of published portal ids of the package.
     */
    @JsonProperty("publishedPortals")
    protected List<String> publishedPortals;

    /**
     * List of tags of the package. Either it can provided during the creation of the package or separately using the package update call
     */
    @JsonProperty("tags")
    protected List<String> tags;

    /**
     * List of details of associated teams of the package.
     */
    @JsonProperty("teams")
    protected List<MonetizationTeam> teams;

    /**
     * Version of the package created
     */
    @JsonProperty("version")
    protected String version;

    /**
     * Constructs a validated instance of {@link MonetizationPackageResponse}.
     *
     * @param spec the specification to process
     */
    public MonetizationPackageResponse(Consumer<MonetizationPackageResponse> spec) {
        super();
        spec.accept(this);
    }

    /**
     * Constructs a validated instance of {@link MonetizationPackageResponse}.
     * <p>
     * NOTE: This constructor is not considered stable and may change if the model is updated. Consider using {@link #MonetizationPackageResponse(Consumer)} instead.
     * @param active active
     * @param apis List of api ids needs to be associated to package. It can be either provided during the package creation or separately using package update call
     * @param creationDate The creation date of package in milli seconds
     * @param customFields Custom fields to be added.
     * @param description Description of the package
     * @param icon An inline base64 encoded string representation of icon to be used in package
     * @param id Id of the package. It will be autogenerated for the package on creation
     * @param modifiedDate The modified date of package in milli seconds. This will be updated for package on update, hot edit, activate and deactivate.
     * @param name Name of the package
     * @param plans List of plan ids needs to be associated to the package. It can be either provided during the package creation or separately using package update call
     * @param policyIds Policy id that contains the IAM policy to use for APIs associated to package. It will be created automatically.
     * @param publishedPortals List of published portal ids of the package.
     * @param tags List of tags of the package. Either it can provided during the creation of the package or separately using the package update call
     * @param teams List of details of associated teams of the package.
     * @param version Version of the package created
     */
    @ApiStatus.Internal
    public MonetizationPackageResponse(Boolean active, List<MonetizationApi> apis, Long creationDate, Map<String, String> customFields, String description, String icon, String id, Long modifiedDate, String name, List<MonetizationPlan> plans, List<String> policyIds, List<String> publishedPortals, List<String> tags, List<MonetizationTeam> teams, String version) {
        this.active = active;
        this.apis = apis;
        this.creationDate = creationDate;
        this.customFields = customFields;
        this.description = description;
        this.icon = icon;
        this.id = id;
        this.modifiedDate = modifiedDate;
        this.name = name;
        this.plans = plans;
        this.policyIds = policyIds;
        this.publishedPortals = publishedPortals;
        this.tags = tags;
        this.teams = teams;
        this.version = version;
    }
}
