// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.webmethodsapigateway4j.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.AccessLevel;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;

/**
 * AdminAPICallbackSettings
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@NoArgsConstructor(access = AccessLevel.PROTECTED, force = true)
@JsonTypeName("AdminAPICallbackSettings")
@JsonPropertyOrder({
    "allowCallBackRequestsHttpsAccessOnly",
    "allowCallbackRequestAccessToAllowedIps",
    "allowedIps",
    "portType",
    "processCallbackRequests"
})
@Generated(value = "io.github.primelib.primecodegen")
public class AdminAPICallbackSettings {

    /**
     * Native Servers can access the callback proxy through HTTPs protocal
     */
    @JsonProperty("allowCallBackRequestsHTTPsAccessOnly")
    protected Boolean allowCallBackRequestsHttpsAccessOnly;

    /**
     * Decider to process callback requests based on Allowed IPs
     */
    @JsonProperty("allowCallbackRequestAccessToAllowedIPs")
    protected Boolean allowCallbackRequestAccessToAllowedIps;

    /**
     * Configure Allowed IPs.
     */
    @JsonProperty("allowedIPs")
    protected List<String> allowedIps;

    /**
     * Select value from Loadbalancer, HTTP, HTTPS, External, the port used to forward to Native Server
     */
    @JsonProperty("portType")
    protected String portType;

    /**
     * Decider to process the callback URLs
     */
    @JsonProperty("processCallbackRequests")
    protected Boolean processCallbackRequests;

    /**
     * Constructs a validated instance of {@link AdminAPICallbackSettings}.
     *
     * @param spec the specification to process
     */
    public AdminAPICallbackSettings(Consumer<AdminAPICallbackSettings> spec) {
        super();
        spec.accept(this);
    }

    /**
     * Constructs a validated instance of {@link AdminAPICallbackSettings}.
     * <p>
     * NOTE: This constructor is not considered stable and may change if the model is updated. Consider using {@link #AdminAPICallbackSettings(Consumer)} instead.
     * @param allowCallBackRequestsHttpsAccessOnly Native Servers can access the callback proxy through HTTPs protocal
     * @param allowCallbackRequestAccessToAllowedIps Decider to process callback requests based on Allowed IPs
     * @param allowedIps Configure Allowed IPs.
     * @param portType Select value from Loadbalancer, HTTP, HTTPS, External, the port used to forward to Native Server
     * @param processCallbackRequests Decider to process the callback URLs
     */
    @ApiStatus.Internal
    public AdminAPICallbackSettings(Boolean allowCallBackRequestsHttpsAccessOnly, Boolean allowCallbackRequestAccessToAllowedIps, List<String> allowedIps, String portType, Boolean processCallbackRequests) {
        this.allowCallBackRequestsHttpsAccessOnly = allowCallBackRequestsHttpsAccessOnly;
        this.allowCallbackRequestAccessToAllowedIps = allowCallbackRequestAccessToAllowedIps;
        this.allowedIps = allowedIps;
        this.portType = portType;
        this.processCallbackRequests = processCallbackRequests;
    }
}
