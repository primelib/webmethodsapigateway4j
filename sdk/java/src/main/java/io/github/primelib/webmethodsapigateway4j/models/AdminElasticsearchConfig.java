// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.webmethodsapigateway4j.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.AccessLevel;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;

/**
 * AdminElasticsearchConfig
 * <p>
 * This model contains details about Elasticsearch endpoint
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@NoArgsConstructor(access = AccessLevel.PROTECTED, force = true)
@JsonTypeName("AdminElasticsearchConfig")
@JsonPropertyOrder({
    "keystoreAlias",
    "keystoreFilePath",
    "keystorePassword",
    "password",
    "truststoreFilePath",
    "truststorePassword",
    "url",
    "username"
})
@Generated(value = "io.github.primelib.primecodegen")
public class AdminElasticsearchConfig {

    @JsonProperty("keystoreAlias")
    protected String keystoreAlias;

    @JsonProperty("keystoreFilePath")
    protected String keystoreFilePath;

    @JsonProperty("keystorePassword")
    protected String keystorePassword;

    /**
     * The password required to authenticate if authentication is enabled for the source Elasticsearch instance.
     */
    @JsonProperty("password")
    protected String password;

    @JsonProperty("truststoreFilePath")
    protected String truststoreFilePath;

    @JsonProperty("truststorePassword")
    protected String truststorePassword;

    /**
     * The source Elasticsearch instance URL
     */
    @JsonProperty("url")
    protected String url;

    /**
     * The user name required to authenticate against if authentication is enabled for the source Elasticsearch instance.
     */
    @JsonProperty("username")
    protected String username;

    /**
     * Constructs a validated instance of {@link AdminElasticsearchConfig}.
     *
     * @param spec the specification to process
     */
    public AdminElasticsearchConfig(Consumer<AdminElasticsearchConfig> spec) {
        super();
        spec.accept(this);
    }

    /**
     * Constructs a validated instance of {@link AdminElasticsearchConfig}.
     * <p>
     * NOTE: This constructor is not considered stable and may change if the model is updated. Consider using {@link #AdminElasticsearchConfig(Consumer)} instead.
     * @param keystoreAlias keystoreAlias
     * @param keystoreFilePath keystoreFilePath
     * @param keystorePassword keystorePassword
     * @param password The password required to authenticate if authentication is enabled for the source Elasticsearch instance.
     * @param truststoreFilePath truststoreFilePath
     * @param truststorePassword truststorePassword
     * @param url The source Elasticsearch instance URL
     * @param username The user name required to authenticate against if authentication is enabled for the source Elasticsearch instance.
     */
    @ApiStatus.Internal
    public AdminElasticsearchConfig(String keystoreAlias, String keystoreFilePath, String keystorePassword, String password, String truststoreFilePath, String truststorePassword, String url, String username) {
        this.keystoreAlias = keystoreAlias;
        this.keystoreFilePath = keystoreFilePath;
        this.keystorePassword = keystorePassword;
        this.password = password;
        this.truststoreFilePath = truststoreFilePath;
        this.truststorePassword = truststorePassword;
        this.url = url;
        this.username = username;
    }
}
