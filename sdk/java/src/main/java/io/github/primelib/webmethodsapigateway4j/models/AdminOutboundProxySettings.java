// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.webmethodsapigateway4j.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.AccessLevel;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;

/**
 * AdminOutboundProxySettings
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@NoArgsConstructor(access = AccessLevel.PROTECTED, force = true)
@JsonTypeName("AdminOutboundProxySettings")
@JsonPropertyOrder({
    "entityId",
    "ftpType",
    "host",
    "isDefault",
    "password",
    "port",
    "protocol",
    "proxyAlias",
    "socksVersion",
    "status",
    "username"
})
@Generated(value = "io.github.primelib.primecodegen")
public class AdminOutboundProxySettings {

    /**
     * The proxy server alias used to identify the entity in API Gateway.
     */
    @JsonProperty("entityId")
    protected String entityId;

    /**
     * The type of the FTP proxy server. Applicable only if protocol value is FTP. Indicated by a number in the range 0 to 7. 0 - No proxy, 1 - ftp_user@ftp_host no proxy auth, 2 - ftp_user@ftp_host proxy auth, 3 - site command, 4 - open command, 5 - ftp_user@proxy_user@ftp_host, 6 - proxy_user@ftp_host, 7 - ftp_user@ftp_host proxy_user
     */
    @JsonProperty("ftpType")
    protected String ftpType;

    /**
     * The host name or IP address of the proxy server.
     */
    @JsonProperty("host")
    protected String host;

    /**
     * Indicates whether this proxy server alias is the default for the corresponding protocol. There can be only one default proxy server alias for a given protocol. Y denotes Yes and N denotes No.
     */
    @JsonProperty("isDefault")
    protected String isDefault;

    /**
     * The password required to authenticate if authentication is enabled for the proxy server.
     */
    @JsonProperty("password")
    protected String password;

    /**
     * The port number of the proxy server.
     */
    @JsonProperty("port")
    protected String port;

    /**
     * The protocol for which the proxy server is created.
     */
    @JsonProperty("protocol")
    protected String protocol;

    /**
     * The outbound proxy server alias name. It must be unique across all outbound proxy server aliases defined in API Gateway. Once a proxy server alias is defined with a given name, it cannot be modified further.
     */
    @JsonProperty("proxyAlias")
    protected String proxyAlias;

    /**
     * The SOCKS version of the proxy server. Applicable only if protocol value is SOCKS. A value of 4 indicates SOCKS protocol version 4 and a value of 5 indicates SOCKS protocol version 5. SOCKS protocol version 4 does not support authentication and hence username/password cannot be specified if socksVersion = 4.
     */
    @JsonProperty("socksVersion")
    protected String socksVersion;

    /**
     * Publish Status of the API for this service registry. Possible values are NEW, PUBLISHED and SUSPENDED. NEW represents the API is not published to the service registry. PUBLISHED represents the API is published to the service registry. SUSPENDED represents the API is published to service registry, but is not currently active (during deactivation of API or shutdown of API Gateway).
     */
    @JsonProperty("status")
    protected String status;

    /**
     * The user name required to authenticate against if authentication is enabled for the proxy server.
     */
    @JsonProperty("username")
    protected String username;

    /**
     * Constructs a validated instance of {@link AdminOutboundProxySettings}.
     *
     * @param spec the specification to process
     */
    public AdminOutboundProxySettings(Consumer<AdminOutboundProxySettings> spec) {
        super();
        spec.accept(this);
    }

    /**
     * Constructs a validated instance of {@link AdminOutboundProxySettings}.
     * <p>
     * NOTE: This constructor is not considered stable and may change if the model is updated. Consider using {@link #AdminOutboundProxySettings(Consumer)} instead.
     * @param entityId The proxy server alias used to identify the entity in API Gateway.
     * @param ftpType The type of the FTP proxy server. Applicable only if protocol value is FTP. Indicated by a number in the range 0 to 7. 0 - No proxy, 1 - ftp_user@ftp_host no proxy auth, 2 - ftp_user@ftp_host proxy auth, 3 - site command, 4 - open command, 5 - ftp_user@proxy_user@ftp_host, 6 - proxy_user@ftp_host, 7 - ftp_user@ftp_host proxy_user
     * @param host The host name or IP address of the proxy server.
     * @param isDefault Indicates whether this proxy server alias is the default for the corresponding protocol. There can be only one default proxy server alias for a given protocol. Y denotes Yes and N denotes No.
     * @param password The password required to authenticate if authentication is enabled for the proxy server.
     * @param port The port number of the proxy server.
     * @param protocol The protocol for which the proxy server is created.
     * @param proxyAlias The outbound proxy server alias name. It must be unique across all outbound proxy server aliases defined in API Gateway. Once a proxy server alias is defined with a given name, it cannot be modified further.
     * @param socksVersion The SOCKS version of the proxy server. Applicable only if protocol value is SOCKS. A value of 4 indicates SOCKS protocol version 4 and a value of 5 indicates SOCKS protocol version 5. SOCKS protocol version 4 does not support authentication and hence username/password cannot be specified if socksVersion = 4.
     * @param status Publish Status of the API for this service registry. Possible values are NEW, PUBLISHED and SUSPENDED. NEW represents the API is not published to the service registry. PUBLISHED represents the API is published to the service registry. SUSPENDED represents the API is published to service registry, but is not currently active (during deactivation of API or shutdown of API Gateway).
     * @param username The user name required to authenticate against if authentication is enabled for the proxy server.
     */
    @ApiStatus.Internal
    public AdminOutboundProxySettings(String entityId, String ftpType, String host, String isDefault, String password, String port, String protocol, String proxyAlias, String socksVersion, String status, String username) {
        this.entityId = entityId;
        this.ftpType = ftpType;
        this.host = host;
        this.isDefault = isDefault;
        this.password = password;
        this.port = port;
        this.protocol = protocol;
        this.proxyAlias = proxyAlias;
        this.socksVersion = socksVersion;
        this.status = status;
        this.username = username;
    }
}
