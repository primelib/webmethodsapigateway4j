// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.webmethodsapigateway4j.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.AccessLevel;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;

/**
 * ArchiveSearchField
 * <p>
 * A scope is filtering criteria for the list of types specified in search.It is a key/value pair. key is the field name on which the search is being done and value  contains the search string to be searched on the field specified.To get the field name for a type, user needs to access the corresponding API Gateway REST service to know about the fields available for a particular type. 
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@NoArgsConstructor(access = AccessLevel.PROTECTED, force = true)
@JsonTypeName("ArchiveSearchField")
@JsonPropertyOrder({
    "attributeName",
    "keyword",
    "orTokenKey",
    "range",
    "rawFieldKey"
})
@Generated(value = "io.github.primelib.primecodegen")
public class ArchiveSearchField {

    /**
     * Field name to be searched for the list of types specified
     */
    @JsonProperty("attributeName")
    protected String attributeName;

    /**
     * Value of the corresponding field to be matched. User can use regular expression to specify the multiple values for single attributeName. For example  to find 
 1. apiDescription contains "weather" or equals "country" , we can use {"attributeName" : "apiDescription", "keyword" : ".*weather.*|country"}. 
 2. apiName starts with weather - {"attributeName" : "apiName", "keyword" : "weather.*"}. 
 3. api type is REST or SOAP - {"attributeName" : "type", "keyword" : "REST|SOAP"}.
     */
    @JsonProperty("keyword")
    protected String keyword;

    @JsonProperty("orTokenKey")
    protected Boolean orTokenKey;

    /**
     * A range is request criteria for the search operation applicable for the data types like date, datetime and integers. Range can be specified either by providing the 'from' and 'to' field or the 'since' field.For example to find 
 1. Search the transactional events generated in between 2020-04-01 (April 1, 2020) and 2020-05-31 (May 31, 2020), we can use {"attributeName" : "creationDate", "range" : {"from" : "2020-04-01", "to" : "2020-05-31"}}. 
 2. Search the transactional events where the request data size in between 1000 and 4000 - {"attributeName" : "apiName", "range" : {"from" : 1000, "to" : 4000}}.
     */
    @JsonProperty("range")
    protected ArchiveSearchRange range;

    @JsonProperty("rawFieldKey")
    protected String rawFieldKey;

    /**
     * Constructs a validated instance of {@link ArchiveSearchField}.
     *
     * @param spec the specification to process
     */
    public ArchiveSearchField(Consumer<ArchiveSearchField> spec) {
        super();
        spec.accept(this);
    }

    /**
     * Constructs a validated instance of {@link ArchiveSearchField}.
     * <p>
     * NOTE: This constructor is not considered stable and may change if the model is updated. Consider using {@link #ArchiveSearchField(Consumer)} instead.
     * @param attributeName Field name to be searched for the list of types specified
     * @param keyword Value of the corresponding field to be matched. User can use regular expression to specify the multiple values for single attributeName. For example  to find 
 1. apiDescription contains "weather" or equals "country" , we can use {"attributeName" : "apiDescription", "keyword" : ".*weather.*|country"}. 
 2. apiName starts with weather - {"attributeName" : "apiName", "keyword" : "weather.*"}. 
 3. api type is REST or SOAP - {"attributeName" : "type", "keyword" : "REST|SOAP"}.
     * @param orTokenKey orTokenKey
     * @param range A range is request criteria for the search operation applicable for the data types like date, datetime and integers. Range can be specified either by providing the 'from' and 'to' field or the 'since' field.For example to find 
 1. Search the transactional events generated in between 2020-04-01 (April 1, 2020) and 2020-05-31 (May 31, 2020), we can use {"attributeName" : "creationDate", "range" : {"from" : "2020-04-01", "to" : "2020-05-31"}}. 
 2. Search the transactional events where the request data size in between 1000 and 4000 - {"attributeName" : "apiName", "range" : {"from" : 1000, "to" : 4000}}.
     * @param rawFieldKey rawFieldKey
     */
    @ApiStatus.Internal
    public ArchiveSearchField(String attributeName, String keyword, Boolean orTokenKey, ArchiveSearchRange range, String rawFieldKey) {
        this.attributeName = attributeName;
        this.keyword = keyword;
        this.orTokenKey = orTokenKey;
        this.range = range;
        this.rawFieldKey = rawFieldKey;
    }
}
