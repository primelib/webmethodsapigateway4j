// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.webmethodsapigateway4j.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.AccessLevel;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;

/**
 * AliasMetadata
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@NoArgsConstructor(access = AccessLevel.PROTECTED, force = true)
@JsonTypeName("AliasMetadata")
@JsonPropertyOrder({
    "accessTokenUrl",
    "authorizeUrl",
    "refreshTokenUrl"
})
@Generated(value = "io.github.primelib.primecodegen")
public class AliasMetadata {

    /**
     * URL to get the access token from the authorization server
     */
    @JsonProperty("accessTokenURL")
    protected String accessTokenUrl;

    /**
     * URL to get the approval from the resource owner
     */
    @JsonProperty("authorizeURL")
    protected String authorizeUrl;

    /**
     * URL to get the new access token from the refresh token
     */
    @JsonProperty("refreshTokenURL")
    protected String refreshTokenUrl;

    /**
     * Constructs a validated instance of {@link AliasMetadata}.
     *
     * @param spec the specification to process
     */
    public AliasMetadata(Consumer<AliasMetadata> spec) {
        super();
        spec.accept(this);
    }

    /**
     * Constructs a validated instance of {@link AliasMetadata}.
     * <p>
     * NOTE: This constructor is not considered stable and may change if the model is updated. Consider using {@link #AliasMetadata(Consumer)} instead.
     * @param accessTokenUrl URL to get the access token from the authorization server
     * @param authorizeUrl URL to get the approval from the resource owner
     * @param refreshTokenUrl URL to get the new access token from the refresh token
     */
    @ApiStatus.Internal
    public AliasMetadata(String accessTokenUrl, String authorizeUrl, String refreshTokenUrl) {
        this.accessTokenUrl = accessTokenUrl;
        this.authorizeUrl = authorizeUrl;
        this.refreshTokenUrl = refreshTokenUrl;
    }
}
