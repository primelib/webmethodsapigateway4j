// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.webmethodsapigateway4j.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.AccessLevel;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;

/**
 * AdminIgnite
 * <p>
 * Used to hold the information about the Ignite settings of an API Gateway cluster
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@NoArgsConstructor(access = AccessLevel.PROTECTED, force = true)
@JsonTypeName("AdminIgnite")
@JsonPropertyOrder({
    "communicationPort",
    "discoveryPort",
    "hostNames",
    "k8SDiscoveryMode",
    "k8SNamespace",
    "k8SServiceName",
    "portRange"
})
@Generated(value = "io.github.primelib.primecodegen")
public class AdminIgnite {

    /**
     * the communication port for Ignite clustering
     */
    @JsonProperty("communicationPort")
    protected String communicationPort;

    /**
     * the discovery port for Ignite clustering
     */
    @JsonProperty("discoveryPort")
    protected String discoveryPort;

    /**
     * comma-separated list of host names for Ignite clustering
     */
    @JsonProperty("hostNames")
    protected String hostNames;

    /**
     * the Kubernetes discovery mode for ignite clustering
     */
    @JsonProperty("k8sDiscoveryMode")
    protected String k8SDiscoveryMode;

    /**
     * the Kubernetes namespace name for Ignite clustering
     */
    @JsonProperty("k8sNamespace")
    protected String k8SNamespace;

    /**
     * the Kubernetes service name for Ignite clustering
     */
    @JsonProperty("k8sServiceName")
    protected String k8SServiceName;

    /**
     * the size of the port ranges for Ignite clustering
     */
    @JsonProperty("portRange")
    protected Integer portRange;

    /**
     * Constructs a validated instance of {@link AdminIgnite}.
     *
     * @param spec the specification to process
     */
    public AdminIgnite(Consumer<AdminIgnite> spec) {
        super();
        spec.accept(this);
    }

    /**
     * Constructs a validated instance of {@link AdminIgnite}.
     * <p>
     * NOTE: This constructor is not considered stable and may change if the model is updated. Consider using {@link #AdminIgnite(Consumer)} instead.
     * @param communicationPort the communication port for Ignite clustering
     * @param discoveryPort the discovery port for Ignite clustering
     * @param hostNames comma-separated list of host names for Ignite clustering
     * @param k8SDiscoveryMode the Kubernetes discovery mode for ignite clustering
     * @param k8SNamespace the Kubernetes namespace name for Ignite clustering
     * @param k8SServiceName the Kubernetes service name for Ignite clustering
     * @param portRange the size of the port ranges for Ignite clustering
     */
    @ApiStatus.Internal
    public AdminIgnite(String communicationPort, String discoveryPort, String hostNames, String k8SDiscoveryMode, String k8SNamespace, String k8SServiceName, Integer portRange) {
        this.communicationPort = communicationPort;
        this.discoveryPort = discoveryPort;
        this.hostNames = hostNames;
        this.k8SDiscoveryMode = k8SDiscoveryMode;
        this.k8SNamespace = k8SNamespace;
        this.k8SServiceName = k8SServiceName;
        this.portRange = portRange;
    }
}
