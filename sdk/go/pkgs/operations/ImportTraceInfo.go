// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package operations

import (
	"context"
	"net/http"

	"github.com/go-resty/resty/v2"
	"github.com/primelib/primecodegen-lib-go/requeststruct"
	"github.com/primelib/webmethods-api-gateway-client/sdk/go/pkgs/models"
)

type ImportTraceInfoRequest struct {
	Payload *models.ImportTraceInfoB `bodyParam:""`
}

type ImportTraceInfoResponse struct {
	// Success response
	Result *models.ServiceMgmtImportTraceInfoResponse
	// Error response
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

// ImportTraceInfo Import trace data from the given archive. This does not import the events in to the storage. It simply reads the archive and returns all the events and their tracing data in the archive.
//
//meta:operation POST /tracer/import
func ImportTraceInfo(client *resty.Client, ctx context.Context, req ImportTraceInfoRequest) (*ImportTraceInfoResponse, error) {
	r := client.R().SetContext(ctx)

	// process request parameters
	reqData, err := requeststruct.ResolveRequestParams(req)
	if err != nil {
		return nil, err
	}
	r.SetHeader("Content-Type", "multipart/form-data")
	r.SetHeader("Accept", "application/json")
	r.SetHeaders(reqData.HeaderParams)
	r.SetPathParams(reqData.PathParams)
	r.SetQueryParamsFromValues(reqData.QueryParams)
	if reqData.BodyParam != nil {
		r.SetBody(reqData.BodyParam)
	}
	result := new(models.ServiceMgmtImportTraceInfoResponse)
	r.SetResult(result)

	// send the request
	resp, err := r.Post("/tracer/import")
	if err != nil {
		return nil, err
	}

	return &ImportTraceInfoResponse{
		StatusCode:  resp.StatusCode(),
		RawResponse: resp.RawResponse,
		Result:      result,
	}, nil
}
