// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package operations

import (
	"context"
	"net/http"

	"github.com/go-resty/resty/v2"
	"github.com/primelib/primecodegen-lib-go/requeststruct"
	"github.com/primelib/webmethods-api-gateway-client/sdk/go/pkgs/models"
)

type GetApiRequest struct {
	APIId  *string `pathParam:"style=simple,explode=false,name=apiId"`   // API Id for the API to be retrieved
	Format *string `queryParam:"style=simple,explode=false,name=format"` // Output format of the API. If the value is 'swagger', you get a API definition in swagger format. If the value is 'raml', you get a raml document. If the value is 'openapi', you get a open API document. If the value is 'odata', you get a zip file holding the OData metadata and service document.
	Url    *string `queryParam:"style=simple,explode=false,name=url"`    // User selected endpoint for API definition in swagger/raml format.
}

type GetApiResponse struct {
	// Success response
	Result *models.ServiceMgmtAPIResponseGetAPIWrapper
	// Error response
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

// GetApi Retrieve an API based on the API id.
//
//meta:operation GET /apis/{apiId}
func GetApi(client *resty.Client, ctx context.Context, req GetApiRequest) (*GetApiResponse, error) {
	r := client.R().SetContext(ctx)

	// process request parameters
	reqData, err := requeststruct.ResolveRequestParams(req)
	if err != nil {
		return nil, err
	}
	r.SetHeader("Accept", "application/json")
	r.SetHeaders(reqData.HeaderParams)
	r.SetPathParams(reqData.PathParams)
	r.SetQueryParamsFromValues(reqData.QueryParams)
	if reqData.BodyParam != nil {
		r.SetBody(reqData.BodyParam)
	}
	result := new(models.ServiceMgmtAPIResponseGetAPIWrapper)
	r.SetResult(result)

	// send the request
	resp, err := r.Get("/apis/{apiId}")
	if err != nil {
		return nil, err
	}

	return &GetApiResponse{
		StatusCode:  resp.StatusCode(),
		RawResponse: resp.RawResponse,
		Result:      result,
	}, nil
}
