// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package operations

import (
	"context"
	"net/http"

	"github.com/go-resty/resty/v2"
	"github.com/primelib/primecodegen-lib-go/requeststruct"
	"github.com/primelib/webmethods-api-gateway-client/sdk/go/pkgs/models"
)

type EnableMockApiRequest struct {
	APIId                      *string `pathParam:"style=simple,explode=false,name=apiId"`                       // API Id for the API to be activated
	RetainDefaultMockResponses *bool   `queryParam:"style=simple,explode=false,name=retainDefaultMockResponses"` // Flag to retain generated mocked responses. When this is set to true, default mocked responses will be retained. If it's set to false, new default mocked responses will be generated using the examples, schema in the API
}

type EnableMockApiResponse struct {
	// Success response
	Result *models.ServiceMgmtAPIResponse
	// Error response
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

// EnableMockApi In API Gateway, you can mock an API implementation. API Gateway lets you mock an API by simulating the native service. API Mocking is useful feature in API first approach, where in the provider may choose to expose the mocked API to the consumers when the actual API doesn't exist or isn't complete.   In API Gateway, when you enable mocking for an API, a default mock response is created for each combination of resource, operation, status code and content-type based on the example and schema set in the API definition. As an API Provider, you can add or modify the default mock responses.  You can specify conditions at the operation level and configure IS services at the API level for a mocked API in the update API operation. At runtime, when the mocked API is invoked instead of calling the native service, API Gateway returns the mocked response to the consumer based on the below priorities: 1. If any of the conditions for the invoked operation satisfies, API Gateway returns the associated mocked response. 2. If no condition is specified or none of the condition for the invoked operation is satisfied, then API Gateway will return  a. the response from an IS service, if an IS service is configured b. default mocked response, if no IS services are configured
//
//meta:operation PUT /apis/{apiId}/mock/enable
func EnableMockApi(client *resty.Client, ctx context.Context, req EnableMockApiRequest) (*EnableMockApiResponse, error) {
	r := client.R().SetContext(ctx)

	// process request parameters
	reqData, err := requeststruct.ResolveRequestParams(req)
	if err != nil {
		return nil, err
	}
	r.SetHeader("Accept", "application/json")
	r.SetHeaders(reqData.HeaderParams)
	r.SetPathParams(reqData.PathParams)
	r.SetQueryParamsFromValues(reqData.QueryParams)
	if reqData.BodyParam != nil {
		r.SetBody(reqData.BodyParam)
	}
	result := new(models.ServiceMgmtAPIResponse)
	r.SetResult(result)

	// send the request
	resp, err := r.Put("/apis/{apiId}/mock/enable")
	if err != nil {
		return nil, err
	}

	return &EnableMockApiResponse{
		StatusCode:  resp.StatusCode(),
		RawResponse: resp.RawResponse,
		Result:      result,
	}, nil
}
