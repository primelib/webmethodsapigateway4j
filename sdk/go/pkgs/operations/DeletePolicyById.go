// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package operations

import (
	"context"
	"net/http"

	"github.com/go-resty/resty/v2"
	"github.com/primelib/primecodegen-lib-go/requeststruct"
)

type DeletePolicyByIdRequest struct {
	PolicyId *string `pathParam:"style=simple,explode=false,name=policyId"` // This path parameter is used to specify the policy id that needs to be deleted. If the policy id specified is global policy then it needs to be in inactive state to delete. Active global policy and global policy with systemPolicy property set to true cannot be deleted.
}

type DeletePolicyByIdResponse struct {
	// Error response
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

// DeletePolicyById This REST request is used to delete the policy from API gateway. This request will automatically delete the associated policy action for this policy
//
//meta:operation DELETE /policies/{policyId}
func DeletePolicyById(client *resty.Client, ctx context.Context, req DeletePolicyByIdRequest) (*DeletePolicyByIdResponse, error) {
	r := client.R().SetContext(ctx)

	// process request parameters
	reqData, err := requeststruct.ResolveRequestParams(req)
	if err != nil {
		return nil, err
	}
	r.SetHeaders(reqData.HeaderParams)
	r.SetPathParams(reqData.PathParams)
	r.SetQueryParamsFromValues(reqData.QueryParams)
	if reqData.BodyParam != nil {
		r.SetBody(reqData.BodyParam)
	}

	// send the request
	resp, err := r.Delete("/policies/{policyId}")
	if err != nil {
		return nil, err
	}

	return &DeletePolicyByIdResponse{
		StatusCode:  resp.StatusCode(),
		RawResponse: resp.RawResponse,
	}, nil
}
