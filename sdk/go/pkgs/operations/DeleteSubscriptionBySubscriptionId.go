// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package operations

import (
	"context"
	"net/http"

	"github.com/go-resty/resty/v2"
	"github.com/primelib/primecodegen-lib-go/requeststruct"
)

type DeleteSubscriptionBySubscriptionIdRequest struct {
	ApplicationId *string `pathParam:"style=simple,explode=false,name=applicationId"` // Application id to delete the application
}

type DeleteSubscriptionBySubscriptionIdResponse struct {
	// Error response
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

// DeleteSubscriptionBySubscriptionId This endpoint is used to deleted subscriptions created in API Gateway. If approval is enabled for deletion of subscription then the a request will be created to approve. Till the request get approved the application will be suspended. If the delete request is approved then the application will be deleted and if the delete request is rejected then the application will be resumed from suspend state.
//
//meta:operation DELETE /subscriptions/{applicationId}
func DeleteSubscriptionBySubscriptionId(client *resty.Client, ctx context.Context, req DeleteSubscriptionBySubscriptionIdRequest) (*DeleteSubscriptionBySubscriptionIdResponse, error) {
	r := client.R().SetContext(ctx)

	// process request parameters
	reqData, err := requeststruct.ResolveRequestParams(req)
	if err != nil {
		return nil, err
	}
	r.SetHeaders(reqData.HeaderParams)
	r.SetPathParams(reqData.PathParams)
	r.SetQueryParamsFromValues(reqData.QueryParams)
	if reqData.BodyParam != nil {
		r.SetBody(reqData.BodyParam)
	}

	// send the request
	resp, err := r.Delete("/subscriptions/{applicationId}")
	if err != nil {
		return nil, err
	}

	return &DeleteSubscriptionBySubscriptionIdResponse{
		StatusCode:  resp.StatusCode(),
		RawResponse: resp.RawResponse,
	}, nil
}
