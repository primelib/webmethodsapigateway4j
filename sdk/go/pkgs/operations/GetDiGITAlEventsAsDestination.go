// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package operations

import (
	"context"
	"net/http"

	"github.com/go-resty/resty/v2"
	"github.com/primelib/primecodegen-lib-go/requeststruct"
	"github.com/primelib/webmethods-api-gateway-client/sdk/go/pkgs/models"
)

type GetDiGITAlEventsAsDestinationRequest struct {
}

type GetDiGITAlEventsAsDestinationResponse struct {
	// Success response
	Result *models.AdminDestination
	// Error response
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

// GetDiGITAlEventsAsDestination The method retrieves the details of the Digital Events destination in API Gateway. Digital Event Services (DES) enables API Gateway to communicate by exchanging digital events. API Gateway can publish runtime events(example: policy violation,log invocation, error events etc), design time events (example: audit log events) and metrics to the configured DES destination.
//
//meta:operation GET /configurations/desDestinationConfig
func GetDiGITAlEventsAsDestination(client *resty.Client, ctx context.Context, req GetDiGITAlEventsAsDestinationRequest) (*GetDiGITAlEventsAsDestinationResponse, error) {
	r := client.R().SetContext(ctx)

	// process request parameters
	reqData, err := requeststruct.ResolveRequestParams(req)
	if err != nil {
		return nil, err
	}
	r.SetHeader("Accept", "application/json")
	r.SetHeaders(reqData.HeaderParams)
	r.SetPathParams(reqData.PathParams)
	r.SetQueryParamsFromValues(reqData.QueryParams)
	if reqData.BodyParam != nil {
		r.SetBody(reqData.BodyParam)
	}
	result := new(models.AdminDestination)
	r.SetResult(result)

	// send the request
	resp, err := r.Get("/configurations/desDestinationConfig")
	if err != nil {
		return nil, err
	}

	return &GetDiGITAlEventsAsDestinationResponse{
		StatusCode:  resp.StatusCode(),
		RawResponse: resp.RawResponse,
		Result:      result,
	}, nil
}
