// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package operations

import (
	"context"
	"net/http"

	"github.com/go-resty/resty/v2"
	"github.com/primelib/primecodegen-lib-go/requeststruct"
	"github.com/primelib/webmethods-api-gateway-client/sdk/go/pkgs/models"
)

type DisableThreatProtectionRuleByPolicyIdRequest struct {
	PolicyId *string `pathParam:"style=simple,explode=false,name=policyId"` // This path parameter is used to specify the policy id of the threat protection policy which needs to be disabled
}

type DisableThreatProtectionRuleByPolicyIdResponse struct {
	// Success response
	Result *models.PolicyMgmtPolicy
	// Error response
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

// DisableThreatProtectionRuleByPolicyId This REST request is used to disable the Threat protection rule created in API Gateway. This request does not require any request body. If the threat protection policy is disabled successfully then the policy details of specified policy will be sent as response.
//
//meta:operation PUT /policies/{policyId}/disable
func DisableThreatProtectionRuleByPolicyId(client *resty.Client, ctx context.Context, req DisableThreatProtectionRuleByPolicyIdRequest) (*DisableThreatProtectionRuleByPolicyIdResponse, error) {
	r := client.R().SetContext(ctx)

	// process request parameters
	reqData, err := requeststruct.ResolveRequestParams(req)
	if err != nil {
		return nil, err
	}
	r.SetHeader("Accept", "application/json")
	r.SetHeaders(reqData.HeaderParams)
	r.SetPathParams(reqData.PathParams)
	r.SetQueryParamsFromValues(reqData.QueryParams)
	if reqData.BodyParam != nil {
		r.SetBody(reqData.BodyParam)
	}
	result := new(models.PolicyMgmtPolicy)
	r.SetResult(result)

	// send the request
	resp, err := r.Put("/policies/{policyId}/disable")
	if err != nil {
		return nil, err
	}

	return &DisableThreatProtectionRuleByPolicyIdResponse{
		StatusCode:  resp.StatusCode(),
		RawResponse: resp.RawResponse,
		Result:      result,
	}, nil
}
