// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package operations

import (
	"context"
	"net/http"

	"github.com/go-resty/resty/v2"
	"github.com/primelib/primecodegen-lib-go/requeststruct"
	"github.com/primelib/webmethods-api-gateway-client/sdk/go/pkgs/models"
)

type CreateAssertionRequest struct {
	Payload *models.PolicyMgmtAssertionConfiguration `bodyParam:""` // assertion request payload
}

type CreateAssertionResponse struct {
	// Success response
	Result *models.PolicyMgmtAssertionConfiguration
	// Error response
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

// CreateAssertion Custom assertions allow the API providers to extend and provide additional security policies that are not available by default in API Gateway. In WS-Security, custom assertions are used for expressing individual security requirements, constraints, or both. The individual policy assertions can be combined to create security policies that ensure secure and reliable exchanges of SOAP messages between a client and a SOAP API. This REST service is used to create a assertion. Below are the request payloads for different types of assertions. bindingAssertion: &quot;{ 	&quot;configurationElement&quot;: &quot;&lt;sp:AsymmetricBinding xmlns:sp=&quot;http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702&quot;&gt; 					&lt;wsp:Policy xmlns:wsp=&quot;http://schemas.xmlsoap.org/ws/2004/09/policy&quot;&gt; 						&lt;sp:InitiatorToken&gt; 							&lt;wsp:Policy&gt; 								&lt;sp:X509Token sp:IncludeToken=&quot;http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/Never&quot;&gt; 									&lt;wsp:Policy&gt; 										&lt;sp:WssX509V3Token10/&gt; 									&lt;/wsp:Policy&gt; 								&lt;/sp:X509Token&gt; 							&lt;/wsp:Policy&gt; 						&lt;/sp:InitiatorToken&gt; 						&lt;sp:RecipientToken&gt; 							&lt;wsp:Policy&gt; 								&lt;sp:X509Token sp:IncludeToken=&quot;http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/Never&quot;&gt; 									&lt;wsp:Policy&gt; 										&lt;sp:WssX509V3Token10/&gt; 									&lt;/wsp:Policy&gt; 								&lt;/sp:X509Token&gt; 							&lt;/wsp:Policy&gt; 						&lt;/sp:RecipientToken&gt; 						&lt;sp:AlgorithmSuite&gt; 							&lt;wsp:Policy&gt; 								&lt;sp:Basic256 /&gt; 							&lt;/wsp:Policy&gt; 						&lt;/sp:AlgorithmSuite&gt; 						&lt;sp:Layout&gt; 							&lt;wsp:Policy&gt; 								&lt;sp:LaxTimestampFirst/&gt; 							&lt;/wsp:Policy&gt; 						&lt;/sp:Layout&gt; 						&lt;sp:ProtectTokens/&gt; 					&lt;/wsp:Policy&gt; 				&lt;/sp:AsymmetricBinding&gt;&quot;, 	&quot;configurationName&quot;:&quot;CustomBindingAssertion1&quot;, 	&quot;assertionType&quot;:&quot;bindingAssertion&quot;}&quot;  tokenAssertion: &quot;{ 	&quot;configurationElement&quot;: &quot;&lt;sp:SupportingTokens xmlns:sp=&quot;http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702&quot;&gt; 					&lt;wsp:Policy xmlns:wsp=&quot;http://schemas.xmlsoap.org/ws/2004/09/policy&quot;&gt; 						&lt;sp:UsernameToken sp:IncludeToken=&quot;http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient&quot;/&gt; 					&lt;/wsp:Policy&gt; 				&lt;/sp:SupportingTokens&gt;&quot;, 	&quot;configurationName&quot;:&quot;UsernameToken&quot;, 	&quot;assertionType&quot;:&quot;tokenAssertion&quot;}&quot; 	 policyAssertion: &quot;{ 	&quot;configurationElement&quot;: &quot;&lt;wsp:Policy wsu:Id=&quot;CustomBinding_IWSTrust13Async_policy&quot; 			xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot; 			xmlns:wsp=&quot;http://schemas.xmlsoap.org/ws/2004/09/policy&quot;  			xmlns:wsaw=&quot;http://www.w3.org/2006/02/addressing/wsdl&quot; 			xmlns:sp=&quot;http://schemas.xmlsoap.org/ws/2005/07/securitypolicy&quot;&gt; 			&lt;wsp:ExactlyOne&gt; 				&lt;wsp:All&gt; 					&lt;sp:TransportBinding xmlns:sp=&quot;http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702&quot;&gt; 						&lt;wsp:Policy&gt; 							&lt;sp:TransportToken&gt; 								&lt;wsp:Policy&gt; 									&lt;sp:HttpsToken/&gt; 								&lt;/wsp:Policy&gt; 							&lt;/sp:TransportToken&gt; 							&lt;sp:AlgorithmSuite&gt; 								&lt;wsp:Policy&gt; 									&lt;sp:Basic128/&gt; 								&lt;/wsp:Policy&gt; 							&lt;/sp:AlgorithmSuite&gt; 							&lt;sp:Layout&gt; 								&lt;wsp:Policy&gt; 									&lt;sp:Strict/&gt; 								&lt;/wsp:Policy&gt; 							&lt;/sp:Layout&gt; 							&lt;sp:IncludeTimestamp/&gt; 						&lt;/wsp:Policy&gt; 					&lt;/sp:TransportBinding&gt; 					&lt;sp:EndorsingSupportingTokens xmlns:sp=&quot;http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702&quot;&gt; 						&lt;wsp:Policy&gt; 							&lt;sp:KerberosToken sp:IncludeToken=&quot;http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/Once&quot;&gt; 								&lt;wsp:Policy&gt; 									&lt;sp:WssGssKerberosV5ApReqToken11/&gt; 								&lt;/wsp:Policy&gt; 							&lt;/sp:KerberosToken&gt; 							&lt;sp:KeyValueToken sp:IncludeToken=&quot;http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/Never&quot; wsp:Optional=&quot;true&quot;/&gt; 							&lt;!--  							&lt;sp:SignedParts&gt; 								&lt;sp:Header Name=&quot;To&quot; Namespace=&quot;http://www.w3.org/2005/08/addressing&quot;/&gt; 							&lt;/sp:SignedParts&gt; 							--&gt; 						&lt;/wsp:Policy&gt; 					&lt;/sp:EndorsingSupportingTokens&gt; 					&lt;sp:Wss11 xmlns:sp=&quot;http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702&quot;&gt; 						&lt;wsp:Policy&gt; 							&lt;sp:MustSupportRefKeyIdentifier/&gt; 							&lt;sp:MustSupportRefIssuerSerial/&gt; 							&lt;sp:MustSupportRefThumbprint/&gt; 							&lt;sp:MustSupportRefEncryptedKey/&gt; 						&lt;/wsp:Policy&gt; 					&lt;/sp:Wss11&gt; 					&lt;sp:Trust13 xmlns:sp=&quot;http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702&quot;&gt; 						&lt;wsp:Policy&gt; 							&lt;sp:MustSupportIssuedTokens/&gt; 							&lt;sp:RequireClientEntropy/&gt; 							&lt;sp:RequireServerEntropy/&gt; 						&lt;/wsp:Policy&gt; 					&lt;/sp:Trust13&gt; 					&lt;wsaw:UsingAddressing/&gt; 				&lt;/wsp:All&gt; 			&lt;/wsp:ExactlyOne&gt; 		&lt;/wsp:Policy&gt;&quot; 	&quot;configurationName&quot;:&quot;KerberosOverTransport&quot;, 	&quot;assertionType&quot;:&quot;policyAssertion&quot;}&quot;
//
//meta:operation POST /assertions
func CreateAssertion(client *resty.Client, ctx context.Context, req CreateAssertionRequest) (*CreateAssertionResponse, error) {
	r := client.R().SetContext(ctx)

	// process request parameters
	reqData, err := requeststruct.ResolveRequestParams(req)
	if err != nil {
		return nil, err
	}
	r.SetHeader("Content-Type", "application/json")
	r.SetHeader("Accept", "application/json")
	r.SetHeaders(reqData.HeaderParams)
	r.SetPathParams(reqData.PathParams)
	r.SetQueryParamsFromValues(reqData.QueryParams)
	if reqData.BodyParam != nil {
		r.SetBody(reqData.BodyParam)
	}
	result := new(models.PolicyMgmtAssertionConfiguration)
	r.SetResult(result)

	// send the request
	resp, err := r.Post("/assertions")
	if err != nil {
		return nil, err
	}

	return &CreateAssertionResponse{
		StatusCode:  resp.StatusCode(),
		RawResponse: resp.RawResponse,
		Result:      result,
	}, nil
}
