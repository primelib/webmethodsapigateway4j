// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package operations

import (
	"context"
	"net/http"

	"github.com/go-resty/resty/v2"
	"github.com/primelib/primecodegen-lib-go/requeststruct"
	"github.com/primelib/webmethods-api-gateway-client/sdk/go/pkgs/models"
)

type GetMobileApplicationConfigurationsRequest struct {
}

type GetMobileApplicationConfigurationsResponse struct {
	// Success response
	Result *models.PolicyMgmtMobileApplicationConfiguration
	// Error response
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

// GetMobileApplicationConfigurations You can use API Gateway to disable access for certain mobile application versions on a predefined set of mobile platforms. By registering the required devices and applications and disabling access to these versions, you ensure that all users use the latest versions of the applications and take advantage of the latest security and functional updates.
//
//meta:operation GET /configurations/mobileApp
func GetMobileApplicationConfigurations(client *resty.Client, ctx context.Context, req GetMobileApplicationConfigurationsRequest) (*GetMobileApplicationConfigurationsResponse, error) {
	r := client.R().SetContext(ctx)

	// process request parameters
	reqData, err := requeststruct.ResolveRequestParams(req)
	if err != nil {
		return nil, err
	}
	r.SetHeader("Accept", "application/json")
	r.SetHeaders(reqData.HeaderParams)
	r.SetPathParams(reqData.PathParams)
	r.SetQueryParamsFromValues(reqData.QueryParams)
	if reqData.BodyParam != nil {
		r.SetBody(reqData.BodyParam)
	}
	result := new(models.PolicyMgmtMobileApplicationConfiguration)
	r.SetResult(result)

	// send the request
	resp, err := r.Get("/configurations/mobileApp")
	if err != nil {
		return nil, err
	}

	return &GetMobileApplicationConfigurationsResponse{
		StatusCode:  resp.StatusCode(),
		RawResponse: resp.RawResponse,
		Result:      result,
	}, nil
}
