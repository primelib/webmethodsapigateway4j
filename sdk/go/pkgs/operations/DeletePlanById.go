// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package operations

import (
	"context"
	"net/http"

	"github.com/go-resty/resty/v2"
	"github.com/primelib/primecodegen-lib-go/requeststruct"
)

type DeletePlanByIdRequest struct {
	PlanId *string `pathParam:"style=simple,explode=false,name=planId"` // Id of a Plan
}

type DeletePlanByIdResponse struct {
	// Error response
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

// DeletePlanById This request is used to delete the plan by plan id. Before deleting the plan, the plan should removed from all of its associated packages else API gateway will not allow the plan to be deleted. You can use /packages/{packageId} resource dis associate the plan from its corresponding packages. The associated rate limit and quota policy will be deleted automatically when the plan is deleted.
//
//meta:operation DELETE /plans/{planId}
func DeletePlanById(client *resty.Client, ctx context.Context, req DeletePlanByIdRequest) (*DeletePlanByIdResponse, error) {
	r := client.R().SetContext(ctx)

	// process request parameters
	reqData, err := requeststruct.ResolveRequestParams(req)
	if err != nil {
		return nil, err
	}
	r.SetHeaders(reqData.HeaderParams)
	r.SetPathParams(reqData.PathParams)
	r.SetQueryParamsFromValues(reqData.QueryParams)
	if reqData.BodyParam != nil {
		r.SetBody(reqData.BodyParam)
	}

	// send the request
	resp, err := r.Delete("/plans/{planId}")
	if err != nil {
		return nil, err
	}

	return &DeletePlanByIdResponse{
		StatusCode:  resp.StatusCode(),
		RawResponse: resp.RawResponse,
	}, nil
}
