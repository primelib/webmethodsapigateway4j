// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package models

// PolicyMgmtPolicy A policy is nothing but a group of policy (runtime) enforcements. It contains the list of policy enforcement ids by stage wise. A stage in a policy belongs execution order of a policy enforcement. Each policy enforcement belong to only one of the stage. For more details about policy stage please refer policyStages resource in API Gateway Policy Management service. The policy can be Service/scope/package/global/template.

type PolicyMgmtPolicy struct {
	Active             *bool                                `json:"active" form:"name=active"`
	Descriptions       []*PolicyMgmtInternationalizedString `json:"descriptions" form:"name=descriptions,json"` // This contains list of description for the policy  with corresponding locale information.
	Global             *bool                                `json:"global" form:"name=global"`
	Id                 *string                              `json:"id" form:"name=id"`                                      // Policy ID
	Names              []*PolicyMgmtInternationalizedString `json:"names" form:"name=names,json"`                           // This contains list of names for the policy with corresponding locale information.
	Parameters         []*PolicyMgmtPolicyActionParameter   `json:"parameters" form:"name=parameters,json"`                 // This basic details of a threat protection rule such as rule name, description, rule action, custom error message etc.will be stored in this property.
	PolicyEnforcements []*PolicyMgmtPolicyEnforcements      `json:"policyEnforcements" form:"name=policyEnforcements,json"` // This property contains list of policy (runtime) enforcement id grouped based on the stages.
	PolicyScope        *string                              `json:"policyScope" form:"name=policyScope"`                    // Policy Scope of the conflicting policy.
	Scope              *PolicyMgmtScope                     `json:"scope" form:"name=scope,json"`                           // A scope is used to define the filtering criteria for Global policy. Using scope we can specify the APIs or Resources or opertaion on which the policy enforcements needs to be applied.
	SystemPolicy       *bool                                `json:"systemPolicy" form:"name=systemPolicy"`
}
