// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package models

type TransactionMgmtTransactionEvent struct {
	APIId                 *string                            `json:"apiId" form:"name=apiId"`                     // API Id
	APIName               *string                            `json:"apiName" form:"name=apiName"`                 // API name
	APIVersion            *string                            `json:"apiVersion" form:"name=apiVersion"`           // API version
	ApplicationId         *string                            `json:"applicationId" form:"name=applicationId"`     // Unique Id of the application
	ApplicationIp         *string                            `json:"applicationIp" form:"name=applicationIp"`     // IP address of the application for the current request
	ApplicationName       *string                            `json:"applicationName" form:"name=applicationName"` // Application name
	CachedResponse        *string                            `json:"cachedResponse" form:"name=cachedResponse"`   // Boolean value to indicate whether the response is served from cache
	CallbackRequest       *bool                              `json:"callbackRequest" form:"name=callbackRequest"`
	ConsumerIp            *string                            `json:"consumerIp" form:"name=consumerIp"`          // IP address of the consumer for the current request
	CorrelationId         *string                            `json:"correlationID" form:"name=correlationID"`    // Correlation ID used in the logging
	CreationDate          *int64                             `json:"creationDate" form:"name=creationDate"`      // Creation time of the transaction.
	CustomFields          *CustomFields                      `json:"customFields" form:"name=customFields,json"` // Custom fields to be added.
	ErrorOrigin           *string                            `json:"errorOrigin" form:"name=errorOrigin"`        // Information of error orgination
	EventType             *string                            `json:"eventType" form:"name=eventType"`
	ExternalCalls         []*TransactionMgmtExternalCallData `json:"externalCalls" form:"name=externalCalls,json"` // Details of external calls made
	GatewayTime           *int64                             `json:"gatewayTime" form:"name=gatewayTime"`          // Time taken by the API Gateway for processing the request
	HttpMethod            *string                            `json:"httpMethod" form:"name=httpMethod"`            // Name of the method
	Id                    *string                            `json:"id" form:"name=id"`
	MessagePayload        *string                            `json:"messagePayload" form:"name=messagePayload"`                    // Payload of a Websocket message
	MessageType           *string                            `json:"messageType" form:"name=messageType"`                          // Websocket message type
	NativeHttpMethod      *string                            `json:"nativeHttpMethod" form:"name=nativeHttpMethod"`                // Finally resolved HTTP method of native endpoint call
	NativeReqPayload      *string                            `json:"nativeReqPayload" form:"name=nativeReqPayload"`                // Request payload sent in native call
	NativeRequestHeaders  *NativeRequestHeaders              `json:"nativeRequestHeaders" form:"name=nativeRequestHeaders,json"`   // Request headers sent in native call
	NativeResPayload      *string                            `json:"nativeResPayload" form:"name=nativeResPayload"`                // Response payload received from native call
	NativeResponseHeaders *NativeResponseHeaders             `json:"nativeResponseHeaders" form:"name=nativeResponseHeaders,json"` // Response headers received from native call
	NativeUrl             *string                            `json:"nativeURL" form:"name=nativeURL"`                              // Finally resolved URL of native endpoint call
	OperationName         *string                            `json:"operationName" form:"name=operationName"`                      // Operation name of the incoming request
	Origin                *string                            `json:"origin" form:"name=origin"`                                    // Origin of a Websocket message
	PackageId             *string                            `json:"packageId" form:"name=packageId"`                              // Id of the package.
	PackageName           *string                            `json:"packageName" form:"name=packageName"`                          // Package name
	PlanId                *string                            `json:"planId" form:"name=planId"`                                    // Id of the Plan
	PlanName              *string                            `json:"planName" form:"name=planName"`                                // Plan name
	ProvIDErTime          *int64                             `json:"providerTime" form:"name=providerTime"`                        // Time taken by the native provider for processing the request
	QueryParameters       *QueryParameters                   `json:"queryParameters" form:"name=queryParameters,json"`             // Incoming query parameters
	ReqPayload            *string                            `json:"reqPayload" form:"name=reqPayload"`                            // The complete request payload
	RequestHeaders        *RequestHeaders                    `json:"requestHeaders" form:"name=requestHeaders,json"`               // Incoming request headers
	ResPayload            *string                            `json:"resPayload" form:"name=resPayload"`                            // The complete response payload
	ResponseCode          *string                            `json:"responseCode" form:"name=responseCode"`                        // Response status code
	ResponseHeaders       *ResponseHeaders                   `json:"responseHeaders" form:"name=responseHeaders,json"`             // Outgoing response headers
	ServerId              *string                            `json:"serverID" form:"name=serverID"`                                // Information about APIGW servername and port
	SessionId             *string                            `json:"sessionId" form:"name=sessionId"`                              // Unique Id of the session
	SourceGateway         *string                            `json:"sourceGateway" form:"name=sourceGateway"`
	SourceGatewayDetails  *string                            `json:"sourceGatewayDetails" form:"name=sourceGatewayDetails"`
	SourceGatewayNode     *string                            `json:"sourceGatewayNode" form:"name=sourceGatewayNode"` // The node which processed the request, in a multi node gateway
	Stage                 *string                            `json:"stage" form:"name=stage"`
	Status                *string                            `json:"status" form:"name=status"` // Status of the request
	TenantId              *string                            `json:"tenantId" form:"name=tenantId"`
	TotalDataSize         *int64                             `json:"totalDataSize" form:"name=totalDataSize"` // Total size of the payload
	TotalTime             *int64                             `json:"totalTime" form:"name=totalTime"`         // Total time taken for processing the request
}
